namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ns1 = "http://www.isocat.org/ns/dcr"
namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
default namespace tei = "http://www.tei-c.org/ns/1.0"
namespace teix = "http://www.tei-c.org/ns/Examples"
namespace xi = "http://www.w3.org/2001/XInclude"
namespace xlink = "http://www.w3.org/1999/xlink"

# Schema generated from ODD source 2017-02-17T20:36:32Z. .
# TEI Edition: Version 3.0.0. Last updated on
#	29th March 2016, revision 89ba24e
# TEI Edition Location: http://www.tei-c.org/Vault/P5/Version 3.0.0/
#

# [http://creativecommons.org/licenses/by-sa/4.0/] Distributed under a Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0) license
OpenAraPE_macro.paraContent =
  (text
   | OpenAraPE_model.gLike
   | OpenAraPE_model.phrase
   | OpenAraPE_model.inter
   | OpenAraPE_model.global
   | OpenAraPE_lg
   | OpenAraPE_model.lLike)*
OpenAraPE_macro.limitedContent =
  (text | OpenAraPE_model.limitedPhrase | OpenAraPE_model.inter)*
OpenAraPE_macro.phraseSeq =
  (text
   | OpenAraPE_model.gLike
   | OpenAraPE_model.phrase
   | OpenAraPE_model.global)*
OpenAraPE_macro.phraseSeq.limited =
  (text | OpenAraPE_model.limitedPhrase | OpenAraPE_model.global)*
OpenAraPE_macro.specialPara =
  (text
   | OpenAraPE_model.gLike
   | OpenAraPE_model.phrase
   | OpenAraPE_model.inter
   | OpenAraPE_model.divPart
   | OpenAraPE_model.global)*
OpenAraPE_macro.xtext = (text | OpenAraPE_model.gLike)*
OpenAraPE_macro.anyXML =
  element * - (tei:* | teix:egXML) {
    attribute * { text }*,
    (text | OpenAraPE_macro.anyXML)*
  }
OpenAraPE_data.name = xsd:Name
OpenAraPE_att.ascribed.attributes = OpenAraPE_att.ascribed.attribute.who
OpenAraPE_att.ascribed.attribute.who =
  
  ## indicates the person, or group of people, to whom the element content is ascribed.
  attribute who {
    list { xsd:anyURI+ }
  }?
OpenAraPE_att.canonical.attributes =
  OpenAraPE_att.canonical.attribute.ref
OpenAraPE_att.canonical.attribute.ref =
  
  ## (reference) provides an explicit means of locating a full definition or identity for the entity being named by means of one or more URIs.
  attribute ref {
    list { xsd:anyURI+ }
  }?
OpenAraPE_att.dimensions.attributes =
  OpenAraPE_att.dimensions.attribute.unit,
  OpenAraPE_att.dimensions.attribute.quantity,
  OpenAraPE_att.dimensions.attribute.extent
OpenAraPE_att.dimensions.attribute.unit =
  
  ## names the unit used for the measurement
  ## Suggested values include: 1] cm(centimetres) ; 2] mm(millimetres) ; 3] in(inches) ; 4] lines; 5] chars(characters) 
  attribute unit {
    
    ## (centimetres) 
    "cm"
    | 
      ## (millimetres) 
      "mm"
    | 
      ## (inches) 
      "in"
    | 
      ## lines of text
      "lines"
    | 
      ## (characters) characters of text
      "chars"
    | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
OpenAraPE_att.dimensions.attribute.quantity =
  
  ## specifies the length in the units specified
  attribute quantity {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
OpenAraPE_att.dimensions.attribute.extent =
  
  ## indicates the size of the object concerned using a project-specific vocabulary combining quantity and units in a single string of words.
  attribute extent { xsd:string }?
OpenAraPE_att.written.attributes = OpenAraPE_att.written.attribute.hand
OpenAraPE_att.written.attribute.hand =
  
  ## points to a handNote element describing the hand considered responsible for the textual content of the element concerned.
  attribute hand { xsd:anyURI }?
OpenAraPE_att.breaking.attributes =
  OpenAraPE_att.breaking.attribute.break
OpenAraPE_att.breaking.attribute.break =
  
  ## indicates whether or not the element bearing this attribute should be considered to mark the end of an orthographic token in the same way as whitespace.
  attribute break {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
OpenAraPE_att.cReferencing.attributes =
  OpenAraPE_att.cReferencing.attribute.cRef
OpenAraPE_att.cReferencing.attribute.cRef =
  
  ## (canonical reference) specifies the destination of the pointer by supplying a canonical reference expressed using the scheme defined in a refsDecl element in the TEI header
  attribute cRef { xsd:string }?
OpenAraPE_att.datable.w3c.attributes =
  OpenAraPE_att.datable.w3c.attribute.when,
  OpenAraPE_att.datable.w3c.attribute.notBefore,
  OpenAraPE_att.datable.w3c.attribute.notAfter,
  OpenAraPE_att.datable.w3c.attribute.from,
  OpenAraPE_att.datable.w3c.attribute.to
OpenAraPE_att.datable.w3c.attribute.when =
  
  ## supplies the value of the date or time in a standard form, e.g. yyyy-mm-dd.
  attribute when {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
OpenAraPE_att.datable.w3c.attribute.notBefore =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
OpenAraPE_att.datable.w3c.attribute.notAfter =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
OpenAraPE_att.datable.w3c.attribute.from =
  
  ## indicates the starting point of the period in standard form, e.g. yyyy-mm-dd.
  attribute from {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
OpenAraPE_att.datable.w3c.attribute.to =
  
  ## indicates the ending point of the period in standard form, e.g. yyyy-mm-dd.
  attribute to {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
sch:pattern [
  id = "tei_OpenAraPE-att.datable.w3c-att-datable-w3c-when-constraint-1"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@when]"
    "\x{a}" ~
    "        "
    sch:report [
      test = "@notBefore|@notAfter|@from|@to"
      role = "nonfatal"
      "The @when attribute cannot be used with any other att.datable.w3c attributes."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id = "tei_OpenAraPE-att.datable.w3c-att-datable-w3c-from-constraint-2"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@from]"
    "\x{a}" ~
    "        "
    sch:report [
      test = "@notBefore"
      role = "nonfatal"
      "The @from and @notBefore attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id = "tei_OpenAraPE-att.datable.w3c-att-datable-w3c-to-constraint-3"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@to]"
    "\x{a}" ~
    "        "
    sch:report [
      test = "@notAfter"
      role = "nonfatal"
      "The @to and @notAfter attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
OpenAraPE_att.datable.attributes =
  OpenAraPE_att.datable.w3c.attributes,
  OpenAraPE_att.datable.iso.attributes,
  OpenAraPE_att.datable.custom.attributes,
  OpenAraPE_att.datable.attribute.calendar
OpenAraPE_att.datable.attribute.calendar =
  
  ## indicates the system or calendar to which the date represented by the content of this element belongs.
  attribute calendar { xsd:anyURI }?
sch:pattern [
  id = "tei_OpenAraPE-att.datable-calendar-calendar-constraint-4"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@calendar]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "string-length(.) gt 0"
      "\x{a}" ~
      "@calendar indicates the system or calendar to which the date represented by the content of this element\x{a}" ~
      "belongs, but this "
      sch:name [ ]
      " element has no textual content."
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
OpenAraPE_att.datcat.attributes =
  OpenAraPE_att.datcat.attribute.datcat,
  OpenAraPE_att.datcat.attribute.valueDatcat
OpenAraPE_att.datcat.attribute.datcat =
  
  ## contains a PID (persistent identifier) that aligns the given element with the appropriate Data Category (or categories) in ISOcat.
  attribute ns1:datcat {
    list { xsd:anyURI+ }
  }?
OpenAraPE_att.datcat.attribute.valueDatcat =
  
  ## contains a PID (persistent identifier) that aligns the content of the given element or the value of the given attribute with the appropriate simple Data Category (or categories) in ISOcat.
  attribute ns1:valueDatcat {
    list { xsd:anyURI+ }
  }?
OpenAraPE_att.declarable.attributes =
  OpenAraPE_att.declarable.attribute.default
OpenAraPE_att.declarable.attribute.default =
  
  ## indicates whether or not this element is selected by default when its parent is selected.
  [ a:defaultValue = "false" ]
  attribute default {
    
    ## This element is selected if its parent is selected
    "true"
    | 
      ## This element can only be selected explicitly, unless it is the only one of its kind, in which case it is selected if its parent is selected.
      "false"
  }?
OpenAraPE_att.fragmentable.attributes =
  OpenAraPE_att.fragmentable.attribute.part
OpenAraPE_att.fragmentable.attribute.part =
  
  ## specifies whether or not its parent element is fragmented in some way, typically by some other overlapping structure: for example a speech which is divided between two or more verse stanzas, a paragraph which is split across a page division, a verse line which is divided between two speakers.
  [ a:defaultValue = "N" ]
  attribute part {
    
    ## (yes) the element is fragmented in some (unspecified) respect
    "Y"
    | 
      ## (no) the element is not fragmented, or no claim is made as to its completeness
      "N"
    | 
      ## (initial) this is the initial part of a fragmented element
      "I"
    | 
      ## (medial) this is a medial part of a fragmented element
      "M"
    | 
      ## (final) this is the final part of a fragmented element
      "F"
  }?
OpenAraPE_att.divLike.attributes = OpenAraPE_att.fragmentable.attributes
OpenAraPE_att.docStatus.attributes =
  OpenAraPE_att.docStatus.attribute.status
OpenAraPE_att.docStatus.attribute.status =
  
  ## describes the status of a document either currently or, when associated with a dated element, at the time indicated.
  ## Sample values include: 1] approved; 2] candidate; 3] cleared; 4] deprecated; 5] draft; 6] embargoed; 7] expired; 8] frozen; 9] galley; 10] proposed; 11] published; 12] recommendation; 13] submitted; 14] unfinished; 15] withdrawn
  [ a:defaultValue = "draft" ]
  attribute status {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
OpenAraPE_att.global.responsibility.attributes =
  OpenAraPE_att.global.responsibility.attribute.resp
OpenAraPE_att.global.responsibility.attribute.resp =
  
  ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
  attribute resp {
    list { xsd:anyURI+ }
  }?
OpenAraPE_att.global.rendition.attributes =
  OpenAraPE_att.global.rendition.attribute.rend,
  OpenAraPE_att.global.rendition.attribute.style,
  OpenAraPE_att.global.rendition.attribute.rendition
OpenAraPE_att.global.rendition.attribute.rend =
  
  ## (rendition) indicates how the element in question was rendered or presented in the source text.
  attribute rend {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
OpenAraPE_att.global.rendition.attribute.style =
  
  ## contains an expression in some formal style definition language which defines the rendering or presentation used for this element in the source text
  attribute style { xsd:string }?
OpenAraPE_att.global.rendition.attribute.rendition =
  
  ## points to a description of the rendering or presentation used for this element in the source text.
  attribute rendition {
    list { xsd:anyURI+ }
  }?
OpenAraPE_att.global.attributes =
  OpenAraPE_att.global.rendition.attributes,
  OpenAraPE_att.global.linking.attributes,
  OpenAraPE_att.global.facs.attributes,
  OpenAraPE_att.global.responsibility.attributes,
  OpenAraPE_att.global.attribute.xmlid,
  OpenAraPE_att.global.attribute.n,
  OpenAraPE_att.global.attribute.xmllang
OpenAraPE_att.global.attribute.xmlid =
  
  ## (identifier) provides a unique identifier for the element bearing the attribute.
  attribute xml:id { xsd:ID }?
OpenAraPE_att.global.attribute.n =
  
  ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
  attribute n { xsd:string }?
OpenAraPE_att.global.attribute.xmllang =
  
  ## (language) indicates the language of the element content using a tag generated according to BCP 47.
  ## Suggested values include: 1] ar; 2] ota; 3] tr; 4] en; 5] fr; 6] de; 7] he; 8] fa; 9] ar-Latn-x-ijmes; 10] ota-Latn-x-ijmes; 11] ota-Latn-TR; 12] fa-Latn-x-ijmes; 13] ar-Latn-EN; 14] ar-Latn-FR; 15] ar-Latn-x-dmg; 16] de-Arab-AR; 17] en-Arab-AR; 18] fr-Arab-AR
  [ a:defaultValue = "ar" ]
  attribute xml:lang {
    
    ## Arabic in Arabic script
    "ar"
    | 
      ## Ottoman in Arabic script
      "ota"
    | 
      ## Modern Turkish
      "tr"
    | 
      ## English
      "en"
    | 
      ## French
      "fr"
    | 
      ## German
      "de"
    | 
      ## Hebrew in Hebrew script
      "he"
    | 
      ## Farsi in Arabic script
      "fa"
    | 
      ## Arabic in Latin script following the IJMES transcription
      "ar-Latn-x-ijmes"
    | 
      ## Ottoman in Latin script following the IJMES transcription
      "ota-Latn-x-ijmes"
    | 
      ## Ottoman in Latin script following common Turkish conventions
      "ota-Latn-TR"
    | 
      ## Farsi in Latin script following the IJMES transcription
      "fa-Latn-x-ijmes"
    | 
      ## Arabic in Latin script following common English conventions
      "ar-Latn-EN"
    | 
      ## Arabic in Latin script following common French conventions
      "ar-Latn-FR"
    | 
      ## Arabic in Latin script following the DMG transcription
      "ar-Latn-x-dmg"
    | 
      ## German transcribed into Arabic script following common Levantine Arabic practices
      "de-Arab-AR"
    | 
      ## English transcribed into Arabic script following common Levantine Arabic practices
      "en-Arab-AR"
    | 
      ## French transcribed into Arabic script following common Levantine Arabic practices
      "fr-Arab-AR"
    | (xsd:language
       | (
          ##
          ""))
  }?
OpenAraPE_att.internetMedia.attributes =
  OpenAraPE_att.internetMedia.attribute.mimeType
OpenAraPE_att.internetMedia.attribute.mimeType =
  
  ## (MIME media type) specifies the applicable multimedia internet mail extension (MIME) media type
  attribute mimeType {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
OpenAraPE_att.media.attributes =
  OpenAraPE_att.internetMedia.attributes,
  OpenAraPE_att.media.attribute.width,
  OpenAraPE_att.media.attribute.height,
  OpenAraPE_att.media.attribute.scale
OpenAraPE_att.media.attribute.width =
  
  ## Where the media are displayed, indicates the display width
  attribute width {
    xsd:token {
      pattern =
        "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|gd|rem|vw|vh|vm)"
    }
  }?
OpenAraPE_att.media.attribute.height =
  
  ## Where the media are displayed, indicates the display height
  attribute height {
    xsd:token {
      pattern =
        "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|gd|rem|vw|vh|vm)"
    }
  }?
OpenAraPE_att.media.attribute.scale =
  
  ## Where the media are displayed, indicates a scale factor to be applied when generating the desired display size
  attribute scale {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
OpenAraPE_att.resourced.attributes =
  OpenAraPE_att.resourced.attribute.url
OpenAraPE_att.resourced.attribute.url =
  
  ## (uniform resource locator) specifies the URL from which the media concerned may be obtained.
  attribute url { xsd:anyURI }
OpenAraPE_att.measurement.attributes =
  OpenAraPE_att.measurement.attribute.unit,
  OpenAraPE_att.measurement.attribute.quantity,
  OpenAraPE_att.measurement.attribute.commodity
OpenAraPE_att.measurement.attribute.unit =
  
  ## indicates the units used for the measurement, usually using the standard symbol for the desired units.
  ## Suggested values include: 1] m(metre) ; 2] kg(kilogram) ; 3] s(second) ; 4] Hz(hertz) ; 5] Pa(pascal) ; 6] Ω(ohm) ; 7] L(litre) ; 8] t(tonne) ; 9] ha(hectare) ; 10] Å(ångström) ; 11] mL(millilitre) ; 12] cm(centimetre) ; 13] dB(decibel) ; 14] kbit(kilobit) ; 15] Kibit(kibibit) ; 16] kB(kilobyte) ; 17] KiB(kibibyte) ; 18] MB(megabyte) ; 19] MiB(mebibyte) 
  attribute unit {
    
    ## (metre) SI base unit of length
    "m"
    | 
      ## (kilogram) SI base unit of mass
      "kg"
    | 
      ## (second) SI base unit of time
      "s"
    | 
      ## (hertz) SI unit of frequency
      "Hz"
    | 
      ## (pascal) SI unit of pressure or stress
      "Pa"
    | 
      ## (ohm) SI unit of electric resistance
      "Ω"
    | 
      ## (litre) 1 dm³
      "L"
    | 
      ## (tonne) 10³ kg
      "t"
    | 
      ## (hectare) 1 hm²
      "ha"
    | 
      ## (ångström) 10⁻¹⁰ m
      "Å"
    | 
      ## (millilitre) 
      "mL"
    | 
      ## (centimetre) 
      "cm"
    | 
      ## (decibel) see remarks, below
      "dB"
    | 
      ## (kilobit) 10³ or 1000 bits
      "kbit"
    | 
      ## (kibibit) 2¹⁰ or 1024 bits
      "Kibit"
    | 
      ## (kilobyte) 10³ or 1000 bytes
      "kB"
    | 
      ## (kibibyte) 2¹⁰ or 1024 bytes
      "KiB"
    | 
      ## (megabyte) 10⁶ or 1 000 000 bytes
      "MB"
    | 
      ## (mebibyte) 2²⁰ or 1 048 576 bytes
      "MiB"
    | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
OpenAraPE_att.measurement.attribute.quantity =
  
  ## specifies the number of the specified units that comprise the measurement
  attribute quantity {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
OpenAraPE_att.measurement.attribute.commodity =
  
  ## indicates the substance that is being measured
  attribute commodity {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
OpenAraPE_att.naming.attributes =
  OpenAraPE_att.canonical.attributes,
  OpenAraPE_att.naming.attribute.role,
  OpenAraPE_att.naming.attribute.nymRef
OpenAraPE_att.naming.attribute.role =
  
  ## may be used to specify further information about the entity referenced by this name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place.
  attribute role {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
OpenAraPE_att.naming.attribute.nymRef =
  
  ## (reference to the canonical name) provides a means of locating the canonical form (nym) of the names associated with the object named by the element bearing it.
  attribute nymRef {
    list { xsd:anyURI+ }
  }?
OpenAraPE_att.placement.attributes =
  OpenAraPE_att.placement.attribute.place
OpenAraPE_att.placement.attribute.place =
  
  ## specifies where this item is placed.
  ## Suggested values include: 1] below; 2] bottom; 3] margin; 4] top; 5] opposite; 6] overleaf; 7] above; 8] end; 9] inline; 10] inspace
  attribute place {
    list {
      (
       ## below the line
       "below"
       | 
         ## at the foot of the page
         "bottom"
       | 
         ## in the margin (left, right, or both)
         "margin"
       | 
         ## at the top of the page
         "top"
       | 
         ## on the opposite, i.e. facing, page
         "opposite"
       | 
         ## on the other side of the leaf
         "overleaf"
       | 
         ## above the line
         "above"
       | 
         ## at the end of e.g. chapter or volume.
         "end"
       | 
         ## within the body of the text.
         "inline"
       | 
         ## in a predefined space, for example left by an earlier scribe.
         "inspace"
       | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" })+
    }
  }?
OpenAraPE_att.typed.attributes =
  OpenAraPE_att.typed.attribute.type,
  OpenAraPE_att.typed.attribute.subtype
OpenAraPE_att.typed.attribute.type =
  
  ## characterizes the element in some sense, using any convenient classification scheme or typology.
  attribute type {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
OpenAraPE_att.typed.attribute.subtype =
  
  ## provides a sub-categorization of the element, if needed
  attribute subtype {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
sch:pattern [
  id = "tei_OpenAraPE-att.typed-subtypeTyped-constraint-5"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@subtype]"
    "\x{a}" ~
    "        "
    sch:assert [
      test = "@type"
      "The "
      sch:name [ ]
      " element should not be categorized in detail with @subtype unless also categorized in general with @type"
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
OpenAraPE_att.pointing.attributes =
  OpenAraPE_att.pointing.attribute.targetLang,
  OpenAraPE_att.pointing.attribute.target,
  OpenAraPE_att.pointing.attribute.evaluate
OpenAraPE_att.pointing.attribute.targetLang =
  
  ## specifies the language of the content to be found at the destination referenced by target, using a language tag generated according to BCP 47.
  attribute targetLang {
    xsd:language
    | (
       ##
       "")
  }?
sch:pattern [
  id = "tei_OpenAraPE-att.pointing-targetLang-targetLang-constraint-6"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[not(self::tei:schemaSpec)][@targetLang]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "@target"
      "@targetLang should only be used on "
      sch:name [ ]
      " if @target is specified."
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
OpenAraPE_att.pointing.attribute.target =
  
  ## specifies the destination of the reference by supplying one or more URI References
  attribute target {
    list { xsd:anyURI+ }
  }?
OpenAraPE_att.pointing.attribute.evaluate =
  
  ## specifies the intended meaning when the target of a pointer is itself a pointer.
  attribute evaluate {
    
    ## if the element pointed to is itself a pointer, then the target of that pointer will be taken, and so on, until an element is found which is not a pointer.
    "all"
    | 
      ## if the element pointed to is itself a pointer, then its target (whether a pointer or not) is taken as the target of this pointer.
      "one"
    | 
      ## no further evaluation of targets is carried out beyond that needed to find the element specified in the pointer's target.
      "none"
  }?
OpenAraPE_att.segLike.attributes =
  OpenAraPE_att.datcat.attributes,
  OpenAraPE_att.fragmentable.attributes,
  OpenAraPE_att.segLike.attribute.function
OpenAraPE_att.segLike.attribute.function =
  
  ## characterizes the function of the segment.
  attribute function {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
OpenAraPE_att.sortable.attributes =
  OpenAraPE_att.sortable.attribute.sortKey
OpenAraPE_att.sortable.attribute.sortKey =
  
  ## supplies the sort key for this element in an index, list or group which contains it.
  attribute sortKey {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
OpenAraPE_att.edition.attributes =
  OpenAraPE_att.edition.attribute.ed,
  OpenAraPE_att.edition.attribute.edRef
OpenAraPE_att.edition.attribute.ed =
  
  ## (edition) supplies a sigil or other arbitrary identifier for the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
  attribute ed {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
OpenAraPE_att.edition.attribute.edRef =
  
  ## (edition reference) provides a pointer to the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
  attribute edRef {
    list { xsd:anyURI+ }
  }?
OpenAraPE_att.spanning.attributes =
  OpenAraPE_att.spanning.attribute.spanTo
OpenAraPE_att.spanning.attribute.spanTo =
  
  ## indicates the end of a span initiated by the element bearing this attribute.
  attribute spanTo { xsd:anyURI }?
sch:pattern [
  id = "tei_OpenAraPE-att.spanning-spanTo-spanTo-2-constraint-7"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@spanTo]"
    "\x{a}" ~
    "            "
    sch:assert [
      test =
        "id(substring(@spanTo,2)) and following::*[@xml:id=substring(current()/@spanTo,2)]"
      "\x{a}" ~
      "The element indicated by @spanTo ("
      sch:value-of [ select = "@spanTo" ]
      ") must follow the current element "
      sch:name [ ]
      "\x{a}" ~
      "                  "
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
OpenAraPE_att.styleDef.attribute.scheme =
  
  ## identifies the language used to describe the rendition.
  attribute scheme {
    
    ## Cascading Stylesheet Language
    "css"
    | 
      ## Extensible Stylesheet Language Formatting Objects
      "xslfo"
    | 
      ## Informal free text description
      "free"
    | 
      ## A user-defined rendition description language
      "other"
  }?
OpenAraPE_att.styleDef.attribute.schemeVersion =
  
  ## supplies a version number for the style language provided in scheme.
  attribute schemeVersion {
    xsd:token { pattern = "[\d]+[a-z]*[\d]*(\.[\d]+[a-z]*[\d]*){0,3}" }
  }?
sch:pattern [
  id =
    "tei_OpenAraPE-att.styleDef-schemeVersion-schemeVersionRequiresScheme-constraint-8"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@schemeVersion]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "@scheme and not(@scheme = 'free')"
      "\x{a}" ~
      "              @schemeVersion can only be used if @scheme is specified.\x{a}" ~
      "            "
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
OpenAraPE_att.tableDecoration.attributes =
  OpenAraPE_att.tableDecoration.attribute.role,
  OpenAraPE_att.tableDecoration.attribute.rows,
  OpenAraPE_att.tableDecoration.attribute.cols
OpenAraPE_att.tableDecoration.attribute.role =
  
  ## indicates the kind of information held in this cell or in each cell of this row.
  [ a:defaultValue = "data" ]
  attribute role {
    
    ##
    "data"
    | 
      ##
      "label"
  }?
OpenAraPE_att.tableDecoration.attribute.rows =
  
  ## indicates the number of rows occupied by this cell or row.
  [ a:defaultValue = "1" ] attribute rows { xsd:nonNegativeInteger }?
OpenAraPE_att.tableDecoration.attribute.cols =
  
  ## (columns) indicates the number of columns occupied by this cell or row.
  [ a:defaultValue = "1" ] attribute cols { xsd:nonNegativeInteger }?
OpenAraPE_att.timed.attributes = empty
OpenAraPE_att.transcriptional.attributes =
  OpenAraPE_att.written.attributes,
  OpenAraPE_att.transcriptional.attribute.status,
  OpenAraPE_att.transcriptional.attribute.cause,
  OpenAraPE_att.transcriptional.attribute.seq
OpenAraPE_att.transcriptional.attribute.status =
  
  ## indicates the effect of the intervention, for example in the case of a deletion, strikeouts which include too much or too little text, or in the case of an addition, an insertion which duplicates some of the text already present.
  ## Sample values include: 1] duplicate; 2] duplicate-partial; 3] excessStart; 4] excessEnd; 5] shortStart; 6] shortEnd; 7] partial; 8] unremarkable
  [ a:defaultValue = "unremarkable" ]
  attribute status {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
OpenAraPE_att.transcriptional.attribute.cause =
  
  ## documents the presumed cause for the intervention.
  ## Suggested values include: 1] fix; 2] unclear
  attribute cause {
    
    ## repeated for the purpose of fixation
    "fix"
    | 
      ## repeated to clarify a previously illegible or badly written text or mark
      "unclear"
    | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
OpenAraPE_att.transcriptional.attribute.seq =
  
  ## (sequence) assigns a sequence number related to the order in which the encoded features carrying this attribute are believed to have occurred.
  attribute seq { xsd:nonNegativeInteger }?
OpenAraPE_att.citing.attributes =
  OpenAraPE_att.citing.attribute.unit,
  OpenAraPE_att.citing.attribute.from,
  OpenAraPE_att.citing.attribute.to
OpenAraPE_att.citing.attribute.unit =
  
  ## identifies the unit of information conveyed by the element, e.g. columns, pages, volume.
  ## Suggested values include: 1] volume; 2] issue; 3] page; 4] line; 5] chapter; 6] part; 7] column
  attribute unit {
    
    ## the element contains a volume number.
    "volume"
    | 
      ## the element contains an issue number, or volume and issue numbers.
      "issue"
    | 
      ## the element contains a page number or page range.
      "page"
    | 
      ## the element contains a line number or line range.
      "line"
    | 
      ## the element contains a chapter indication (number and/or title)
      "chapter"
    | 
      ## the element identifies a part of a book or collection.
      "part"
    | 
      ## the element identifies a column.
      "column"
    | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
OpenAraPE_att.citing.attribute.from =
  
  ## specifies the starting point of the range of units indicated by the unit attribute.
  attribute from {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
OpenAraPE_att.citing.attribute.to =
  
  ## specifies the end-point of the range of units indicated by the unit attribute.
  attribute to {
    xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }?
OpenAraPE_model.nameLike.agent =
  OpenAraPE_name | OpenAraPE_orgName | OpenAraPE_persName
OpenAraPE_model.nameLike.agent_alternation =
  OpenAraPE_name | OpenAraPE_orgName | OpenAraPE_persName
OpenAraPE_model.nameLike.agent_sequence =
  OpenAraPE_name, OpenAraPE_orgName, OpenAraPE_persName
OpenAraPE_model.nameLike.agent_sequenceOptional =
  OpenAraPE_name?, OpenAraPE_orgName?, OpenAraPE_persName?
OpenAraPE_model.nameLike.agent_sequenceOptionalRepeatable =
  OpenAraPE_name*, OpenAraPE_orgName*, OpenAraPE_persName*
OpenAraPE_model.nameLike.agent_sequenceRepeatable =
  OpenAraPE_name+, OpenAraPE_orgName+, OpenAraPE_persName+
OpenAraPE_model.segLike = OpenAraPE_seg
OpenAraPE_model.hiLike = OpenAraPE_hi
OpenAraPE_model.hiLike_alternation = OpenAraPE_hi
OpenAraPE_model.hiLike_sequence = OpenAraPE_hi
OpenAraPE_model.hiLike_sequenceOptional = OpenAraPE_hi?
OpenAraPE_model.hiLike_sequenceOptionalRepeatable = OpenAraPE_hi*
OpenAraPE_model.hiLike_sequenceRepeatable = OpenAraPE_hi+
OpenAraPE_model.emphLike =
  OpenAraPE_foreign | OpenAraPE_term | OpenAraPE_title | OpenAraPE_code
OpenAraPE_model.emphLike_alternation =
  OpenAraPE_foreign | OpenAraPE_term | OpenAraPE_title | OpenAraPE_code
OpenAraPE_model.emphLike_sequence =
  OpenAraPE_foreign, OpenAraPE_term, OpenAraPE_title, OpenAraPE_code
OpenAraPE_model.emphLike_sequenceOptional =
  OpenAraPE_foreign?, OpenAraPE_term?, OpenAraPE_title?, OpenAraPE_code?
OpenAraPE_model.emphLike_sequenceOptionalRepeatable =
  OpenAraPE_foreign*, OpenAraPE_term*, OpenAraPE_title*, OpenAraPE_code*
OpenAraPE_model.emphLike_sequenceRepeatable =
  OpenAraPE_foreign+, OpenAraPE_term+, OpenAraPE_title+, OpenAraPE_code+
OpenAraPE_model.highlighted =
  OpenAraPE_model.hiLike | OpenAraPE_model.emphLike
OpenAraPE_model.dateLike = OpenAraPE_date | OpenAraPE_time
OpenAraPE_model.dateLike_alternation = OpenAraPE_date | OpenAraPE_time
OpenAraPE_model.dateLike_sequence = OpenAraPE_date, OpenAraPE_time
OpenAraPE_model.dateLike_sequenceOptional =
  OpenAraPE_date?, OpenAraPE_time?
OpenAraPE_model.dateLike_sequenceOptionalRepeatable =
  OpenAraPE_date*, OpenAraPE_time*
OpenAraPE_model.dateLike_sequenceRepeatable =
  OpenAraPE_date+, OpenAraPE_time+
OpenAraPE_model.measureLike =
  OpenAraPE_num
  | OpenAraPE_measure
  | OpenAraPE_measureGrp
  | OpenAraPE_geo
OpenAraPE_model.measureLike_alternation =
  OpenAraPE_num
  | OpenAraPE_measure
  | OpenAraPE_measureGrp
  | OpenAraPE_geo
OpenAraPE_model.measureLike_sequence =
  OpenAraPE_num, OpenAraPE_measure, OpenAraPE_measureGrp, OpenAraPE_geo
OpenAraPE_model.measureLike_sequenceOptional =
  OpenAraPE_num?,
  OpenAraPE_measure?,
  OpenAraPE_measureGrp?,
  OpenAraPE_geo?
OpenAraPE_model.measureLike_sequenceOptionalRepeatable =
  OpenAraPE_num*,
  OpenAraPE_measure*,
  OpenAraPE_measureGrp*,
  OpenAraPE_geo*
OpenAraPE_model.measureLike_sequenceRepeatable =
  OpenAraPE_num+,
  OpenAraPE_measure+,
  OpenAraPE_measureGrp+,
  OpenAraPE_geo+
OpenAraPE_model.egLike = notAllowed
OpenAraPE_model.egLike_alternation = notAllowed
OpenAraPE_model.egLike_sequence = empty
OpenAraPE_model.egLike_sequenceOptional = empty
OpenAraPE_model.egLike_sequenceOptionalRepeatable = empty
OpenAraPE_model.egLike_sequenceRepeatable = notAllowed
OpenAraPE_model.graphicLike = OpenAraPE_graphic
OpenAraPE_model.offsetLike = OpenAraPE_offset | OpenAraPE_geogFeat
OpenAraPE_model.offsetLike_alternation =
  OpenAraPE_offset | OpenAraPE_geogFeat
OpenAraPE_model.offsetLike_sequence =
  OpenAraPE_offset, OpenAraPE_geogFeat
OpenAraPE_model.offsetLike_sequenceOptional =
  OpenAraPE_offset?, OpenAraPE_geogFeat?
OpenAraPE_model.offsetLike_sequenceOptionalRepeatable =
  OpenAraPE_offset*, OpenAraPE_geogFeat*
OpenAraPE_model.offsetLike_sequenceRepeatable =
  OpenAraPE_offset+, OpenAraPE_geogFeat+
OpenAraPE_model.pPart.msdesc = notAllowed
OpenAraPE_model.pPart.editorial =
  OpenAraPE_choice
  | OpenAraPE_abbr
  | OpenAraPE_expan
  | OpenAraPE_ex
  | OpenAraPE_am
OpenAraPE_model.pPart.editorial_alternation =
  OpenAraPE_choice
  | OpenAraPE_abbr
  | OpenAraPE_expan
  | OpenAraPE_ex
  | OpenAraPE_am
OpenAraPE_model.pPart.editorial_sequence =
  OpenAraPE_choice,
  OpenAraPE_abbr,
  OpenAraPE_expan,
  OpenAraPE_ex,
  OpenAraPE_am
OpenAraPE_model.pPart.editorial_sequenceOptional =
  OpenAraPE_choice?,
  OpenAraPE_abbr?,
  OpenAraPE_expan?,
  OpenAraPE_ex?,
  OpenAraPE_am?
OpenAraPE_model.pPart.editorial_sequenceOptionalRepeatable =
  OpenAraPE_choice*,
  OpenAraPE_abbr*,
  OpenAraPE_expan*,
  OpenAraPE_ex*,
  OpenAraPE_am*
OpenAraPE_model.pPart.editorial_sequenceRepeatable =
  OpenAraPE_choice+,
  OpenAraPE_abbr+,
  OpenAraPE_expan+,
  OpenAraPE_ex+,
  OpenAraPE_am+
OpenAraPE_model.pPart.transcriptional =
  OpenAraPE_sic
  | OpenAraPE_corr
  | OpenAraPE_reg
  | OpenAraPE_orig
  | OpenAraPE_add
  | OpenAraPE_del
  | OpenAraPE_unclear
  | OpenAraPE_supplied
OpenAraPE_model.pPart.transcriptional_alternation =
  OpenAraPE_sic
  | OpenAraPE_corr
  | OpenAraPE_reg
  | OpenAraPE_orig
  | OpenAraPE_add
  | OpenAraPE_del
  | OpenAraPE_unclear
  | OpenAraPE_supplied
OpenAraPE_model.pPart.transcriptional_sequence =
  OpenAraPE_sic,
  OpenAraPE_corr,
  OpenAraPE_reg,
  OpenAraPE_orig,
  OpenAraPE_add,
  OpenAraPE_del,
  OpenAraPE_unclear,
  OpenAraPE_supplied
OpenAraPE_model.pPart.transcriptional_sequenceOptional =
  OpenAraPE_sic?,
  OpenAraPE_corr?,
  OpenAraPE_reg?,
  OpenAraPE_orig?,
  OpenAraPE_add?,
  OpenAraPE_del?,
  OpenAraPE_unclear?,
  OpenAraPE_supplied?
OpenAraPE_model.pPart.transcriptional_sequenceOptionalRepeatable =
  OpenAraPE_sic*,
  OpenAraPE_corr*,
  OpenAraPE_reg*,
  OpenAraPE_orig*,
  OpenAraPE_add*,
  OpenAraPE_del*,
  OpenAraPE_unclear*,
  OpenAraPE_supplied*
OpenAraPE_model.pPart.transcriptional_sequenceRepeatable =
  OpenAraPE_sic+,
  OpenAraPE_corr+,
  OpenAraPE_reg+,
  OpenAraPE_orig+,
  OpenAraPE_add+,
  OpenAraPE_del+,
  OpenAraPE_unclear+,
  OpenAraPE_supplied+
OpenAraPE_model.pPart.edit =
  OpenAraPE_model.pPart.editorial
  | OpenAraPE_model.pPart.transcriptional
OpenAraPE_model.linePart =
  OpenAraPE_model.segLike
  | OpenAraPE_model.hiLike
  | OpenAraPE_model.pPart.transcriptional
  | OpenAraPE_choice
  | OpenAraPE_zone
OpenAraPE_model.ptrLike = OpenAraPE_ptr | OpenAraPE_ref
OpenAraPE_model.lPart = notAllowed
OpenAraPE_model.global.meta = OpenAraPE_index
OpenAraPE_model.milestoneLike =
  OpenAraPE_milestone
  | OpenAraPE_gb
  | OpenAraPE_pb
  | OpenAraPE_lb
  | OpenAraPE_cb
  | OpenAraPE_fw
OpenAraPE_model.gLike = notAllowed
OpenAraPE_model.oddDecl = notAllowed
OpenAraPE_model.oddDecl_alternation = notAllowed
OpenAraPE_model.oddDecl_sequence = empty
OpenAraPE_model.oddDecl_sequenceOptional = empty
OpenAraPE_model.oddDecl_sequenceOptionalRepeatable = empty
OpenAraPE_model.oddDecl_sequenceRepeatable = notAllowed
OpenAraPE_model.phrase.xml =
  OpenAraPE_att | OpenAraPE_gi | OpenAraPE_tag
OpenAraPE_model.specDescLike = notAllowed
OpenAraPE_model.biblLike =
  OpenAraPE_bibl
  | OpenAraPE_biblStruct
  | OpenAraPE_listBibl
  | OpenAraPE_biblFull
OpenAraPE_model.biblLike_alternation =
  OpenAraPE_bibl
  | OpenAraPE_biblStruct
  | OpenAraPE_listBibl
  | OpenAraPE_biblFull
OpenAraPE_model.biblLike_sequence =
  OpenAraPE_bibl,
  OpenAraPE_biblStruct,
  OpenAraPE_listBibl,
  OpenAraPE_biblFull
OpenAraPE_model.biblLike_sequenceOptional =
  OpenAraPE_bibl?,
  OpenAraPE_biblStruct?,
  OpenAraPE_listBibl?,
  OpenAraPE_biblFull?
OpenAraPE_model.biblLike_sequenceOptionalRepeatable =
  OpenAraPE_bibl*,
  OpenAraPE_biblStruct*,
  OpenAraPE_listBibl*,
  OpenAraPE_biblFull*
OpenAraPE_model.biblLike_sequenceRepeatable =
  OpenAraPE_bibl+,
  OpenAraPE_biblStruct+,
  OpenAraPE_listBibl+,
  OpenAraPE_biblFull+
OpenAraPE_model.headLike = OpenAraPE_head
OpenAraPE_model.headLike_alternation = OpenAraPE_head
OpenAraPE_model.headLike_sequence = OpenAraPE_head
OpenAraPE_model.headLike_sequenceOptional = OpenAraPE_head?
OpenAraPE_model.headLike_sequenceOptionalRepeatable = OpenAraPE_head*
OpenAraPE_model.headLike_sequenceRepeatable = OpenAraPE_head+
OpenAraPE_model.labelLike = OpenAraPE_label
OpenAraPE_model.labelLike_alternation = OpenAraPE_label
OpenAraPE_model.labelLike_sequence = OpenAraPE_label
OpenAraPE_model.labelLike_sequenceOptional = OpenAraPE_label?
OpenAraPE_model.labelLike_sequenceOptionalRepeatable = OpenAraPE_label*
OpenAraPE_model.labelLike_sequenceRepeatable = OpenAraPE_label+
OpenAraPE_model.listLike =
  OpenAraPE_list
  | OpenAraPE_listOrg
  | OpenAraPE_listEvent
  | OpenAraPE_listPerson
  | OpenAraPE_listPlace
  | OpenAraPE_listNym
  | OpenAraPE_table
OpenAraPE_model.listLike_alternation =
  OpenAraPE_list
  | OpenAraPE_listOrg
  | OpenAraPE_listEvent
  | OpenAraPE_listPerson
  | OpenAraPE_listPlace
  | OpenAraPE_listNym
  | OpenAraPE_table
OpenAraPE_model.listLike_sequence =
  OpenAraPE_list,
  OpenAraPE_listOrg,
  OpenAraPE_listEvent,
  OpenAraPE_listPerson,
  OpenAraPE_listPlace,
  OpenAraPE_listNym,
  OpenAraPE_table
OpenAraPE_model.listLike_sequenceOptional =
  OpenAraPE_list?,
  OpenAraPE_listOrg?,
  OpenAraPE_listEvent?,
  OpenAraPE_listPerson?,
  OpenAraPE_listPlace?,
  OpenAraPE_listNym?,
  OpenAraPE_table?
OpenAraPE_model.listLike_sequenceOptionalRepeatable =
  OpenAraPE_list*,
  OpenAraPE_listOrg*,
  OpenAraPE_listEvent*,
  OpenAraPE_listPerson*,
  OpenAraPE_listPlace*,
  OpenAraPE_listNym*,
  OpenAraPE_table*
OpenAraPE_model.listLike_sequenceRepeatable =
  OpenAraPE_list+,
  OpenAraPE_listOrg+,
  OpenAraPE_listEvent+,
  OpenAraPE_listPerson+,
  OpenAraPE_listPlace+,
  OpenAraPE_listNym+,
  OpenAraPE_table+
OpenAraPE_model.noteLike = OpenAraPE_note
OpenAraPE_model.lLike = OpenAraPE_l
OpenAraPE_model.lLike_alternation = OpenAraPE_l
OpenAraPE_model.lLike_sequence = OpenAraPE_l
OpenAraPE_model.lLike_sequenceOptional = OpenAraPE_l?
OpenAraPE_model.lLike_sequenceOptionalRepeatable = OpenAraPE_l*
OpenAraPE_model.lLike_sequenceRepeatable = OpenAraPE_l+
OpenAraPE_model.pLike = OpenAraPE_p | OpenAraPE_ab
OpenAraPE_model.pLike_alternation = OpenAraPE_p | OpenAraPE_ab
OpenAraPE_model.pLike_sequence = OpenAraPE_p, OpenAraPE_ab
OpenAraPE_model.pLike_sequenceOptional = OpenAraPE_p?, OpenAraPE_ab?
OpenAraPE_model.pLike_sequenceOptionalRepeatable =
  OpenAraPE_p*, OpenAraPE_ab*
OpenAraPE_model.pLike_sequenceRepeatable = OpenAraPE_p+, OpenAraPE_ab+
OpenAraPE_model.stageLike = notAllowed
OpenAraPE_model.stageLike_alternation = notAllowed
OpenAraPE_model.stageLike_sequence = empty
OpenAraPE_model.stageLike_sequenceOptional = empty
OpenAraPE_model.stageLike_sequenceOptionalRepeatable = empty
OpenAraPE_model.stageLike_sequenceRepeatable = notAllowed
OpenAraPE_model.entryPart = notAllowed
OpenAraPE_model.eventLike = OpenAraPE_event | OpenAraPE_listEvent
OpenAraPE_model.global.edit = OpenAraPE_gap | OpenAraPE_space
OpenAraPE_model.divPart =
  OpenAraPE_model.lLike | OpenAraPE_model.pLike | OpenAraPE_lg
OpenAraPE_model.persStateLike =
  OpenAraPE_persName
  | OpenAraPE_affiliation
  | OpenAraPE_age
  | OpenAraPE_education
  | OpenAraPE_faith
  | OpenAraPE_floruit
  | OpenAraPE_nationality
  | OpenAraPE_occupation
  | OpenAraPE_residence
  | OpenAraPE_sex
  | OpenAraPE_socecStatus
  | OpenAraPE_state
  | OpenAraPE_trait
OpenAraPE_model.personLike =
  OpenAraPE_org | OpenAraPE_person | OpenAraPE_personGrp
OpenAraPE_model.personPart =
  OpenAraPE_model.biblLike
  | OpenAraPE_model.eventLike
  | OpenAraPE_model.persStateLike
  | OpenAraPE_idno
  | OpenAraPE_birth
  | OpenAraPE_death
OpenAraPE_model.placeNamePart =
  OpenAraPE_placeName
  | OpenAraPE_bloc
  | OpenAraPE_country
  | OpenAraPE_region
  | OpenAraPE_district
  | OpenAraPE_settlement
  | OpenAraPE_geogName
OpenAraPE_model.placeNamePart_alternation =
  OpenAraPE_placeName
  | OpenAraPE_bloc
  | OpenAraPE_country
  | OpenAraPE_region
  | OpenAraPE_district
  | OpenAraPE_settlement
  | OpenAraPE_geogName
OpenAraPE_model.placeNamePart_sequence =
  OpenAraPE_placeName,
  OpenAraPE_bloc,
  OpenAraPE_country,
  OpenAraPE_region,
  OpenAraPE_district,
  OpenAraPE_settlement,
  OpenAraPE_geogName
OpenAraPE_model.placeNamePart_sequenceOptional =
  OpenAraPE_placeName?,
  OpenAraPE_bloc?,
  OpenAraPE_country?,
  OpenAraPE_region?,
  OpenAraPE_district?,
  OpenAraPE_settlement?,
  OpenAraPE_geogName?
OpenAraPE_model.placeNamePart_sequenceOptionalRepeatable =
  OpenAraPE_placeName*,
  OpenAraPE_bloc*,
  OpenAraPE_country*,
  OpenAraPE_region*,
  OpenAraPE_district*,
  OpenAraPE_settlement*,
  OpenAraPE_geogName*
OpenAraPE_model.placeNamePart_sequenceRepeatable =
  OpenAraPE_placeName+,
  OpenAraPE_bloc+,
  OpenAraPE_country+,
  OpenAraPE_region+,
  OpenAraPE_district+,
  OpenAraPE_settlement+,
  OpenAraPE_geogName+
OpenAraPE_model.placeStateLike =
  OpenAraPE_model.placeNamePart
  | OpenAraPE_climate
  | OpenAraPE_location
  | OpenAraPE_population
  | OpenAraPE_state
  | OpenAraPE_terrain
  | OpenAraPE_trait
OpenAraPE_model.placeStateLike_alternation =
  OpenAraPE_model.placeNamePart_alternation
  | OpenAraPE_climate
  | OpenAraPE_location
  | OpenAraPE_population
  | OpenAraPE_state
  | OpenAraPE_terrain
  | OpenAraPE_trait
OpenAraPE_model.placeStateLike_sequence =
  OpenAraPE_model.placeNamePart_sequence,
  OpenAraPE_climate,
  OpenAraPE_location,
  OpenAraPE_population,
  OpenAraPE_state,
  OpenAraPE_terrain,
  OpenAraPE_trait
OpenAraPE_model.placeStateLike_sequenceOptional =
  OpenAraPE_model.placeNamePart_sequenceOptional?,
  OpenAraPE_climate?,
  OpenAraPE_location?,
  OpenAraPE_population?,
  OpenAraPE_state?,
  OpenAraPE_terrain?,
  OpenAraPE_trait?
OpenAraPE_model.placeStateLike_sequenceOptionalRepeatable =
  OpenAraPE_model.placeNamePart_sequenceOptionalRepeatable*,
  OpenAraPE_climate*,
  OpenAraPE_location*,
  OpenAraPE_population*,
  OpenAraPE_state*,
  OpenAraPE_terrain*,
  OpenAraPE_trait*
OpenAraPE_model.placeStateLike_sequenceRepeatable =
  OpenAraPE_model.placeNamePart_sequenceRepeatable+,
  OpenAraPE_climate+,
  OpenAraPE_location+,
  OpenAraPE_population+,
  OpenAraPE_state+,
  OpenAraPE_terrain+,
  OpenAraPE_trait+
OpenAraPE_model.orgPart =
  OpenAraPE_model.eventLike
  | OpenAraPE_listOrg
  | OpenAraPE_listPerson
  | OpenAraPE_listPlace
OpenAraPE_model.publicationStmtPart.agency =
  OpenAraPE_publisher | OpenAraPE_distributor | OpenAraPE_authority
OpenAraPE_model.publicationStmtPart.detail =
  OpenAraPE_date
  | OpenAraPE_pubPlace
  | OpenAraPE_idno
  | OpenAraPE_availability
OpenAraPE_model.availabilityPart = OpenAraPE_licence
OpenAraPE_model.certLike = notAllowed
OpenAraPE_model.descLike = notAllowed
OpenAraPE_model.quoteLike = OpenAraPE_quote | OpenAraPE_cit
OpenAraPE_model.quoteLike_alternation = OpenAraPE_quote | OpenAraPE_cit
OpenAraPE_model.quoteLike_sequence = OpenAraPE_quote, OpenAraPE_cit
OpenAraPE_model.quoteLike_sequenceOptional =
  OpenAraPE_quote?, OpenAraPE_cit?
OpenAraPE_model.quoteLike_sequenceOptionalRepeatable =
  OpenAraPE_quote*, OpenAraPE_cit*
OpenAraPE_model.quoteLike_sequenceRepeatable =
  OpenAraPE_quote+, OpenAraPE_cit+
OpenAraPE_model.qLike =
  OpenAraPE_model.quoteLike
  | OpenAraPE_said
  | OpenAraPE_q
  | OpenAraPE_floatingText
OpenAraPE_model.qLike_alternation =
  OpenAraPE_model.quoteLike_alternation
  | OpenAraPE_said
  | OpenAraPE_q
  | OpenAraPE_floatingText
OpenAraPE_model.qLike_sequence =
  OpenAraPE_model.quoteLike_sequence,
  OpenAraPE_said,
  OpenAraPE_q,
  OpenAraPE_floatingText
OpenAraPE_model.qLike_sequenceOptional =
  OpenAraPE_model.quoteLike_sequenceOptional?,
  OpenAraPE_said?,
  OpenAraPE_q?,
  OpenAraPE_floatingText?
OpenAraPE_model.qLike_sequenceOptionalRepeatable =
  OpenAraPE_model.quoteLike_sequenceOptionalRepeatable*,
  OpenAraPE_said*,
  OpenAraPE_q*,
  OpenAraPE_floatingText*
OpenAraPE_model.qLike_sequenceRepeatable =
  OpenAraPE_model.quoteLike_sequenceRepeatable+,
  OpenAraPE_said+,
  OpenAraPE_q+,
  OpenAraPE_floatingText+
OpenAraPE_model.respLike =
  OpenAraPE_author
  | OpenAraPE_editor
  | OpenAraPE_respStmt
  | OpenAraPE_funder
OpenAraPE_model.divWrapper =
  OpenAraPE_byline
  | OpenAraPE_dateline
  | OpenAraPE_epigraph
  | OpenAraPE_salute
OpenAraPE_model.divTopPart = OpenAraPE_model.headLike | OpenAraPE_opener
OpenAraPE_model.divTop =
  OpenAraPE_model.divWrapper | OpenAraPE_model.divTopPart
OpenAraPE_model.frontPart.drama = notAllowed
OpenAraPE_model.pLike.front =
  OpenAraPE_head | OpenAraPE_byline | OpenAraPE_epigraph
OpenAraPE_model.divBottomPart =
  OpenAraPE_trailer | OpenAraPE_closer | OpenAraPE_postscript
OpenAraPE_model.divBottom =
  OpenAraPE_model.divWrapper | OpenAraPE_model.divBottomPart
OpenAraPE_model.choicePart =
  OpenAraPE_sic
  | OpenAraPE_corr
  | OpenAraPE_reg
  | OpenAraPE_orig
  | OpenAraPE_unclear
  | OpenAraPE_abbr
  | OpenAraPE_expan
  | OpenAraPE_seg
  | OpenAraPE_ex
  | OpenAraPE_am
OpenAraPE_model.imprintPart =
  OpenAraPE_publisher
  | OpenAraPE_biblScope
  | OpenAraPE_pubPlace
  | OpenAraPE_distributor
OpenAraPE_model.addressLike = OpenAraPE_affiliation
OpenAraPE_model.addressLike_alternation = OpenAraPE_affiliation
OpenAraPE_model.addressLike_sequence = OpenAraPE_affiliation
OpenAraPE_model.addressLike_sequenceOptional = OpenAraPE_affiliation?
OpenAraPE_model.addressLike_sequenceOptionalRepeatable =
  OpenAraPE_affiliation*
OpenAraPE_model.addressLike_sequenceRepeatable = OpenAraPE_affiliation+
OpenAraPE_model.nameLike =
  OpenAraPE_model.nameLike.agent
  | OpenAraPE_model.offsetLike
  | OpenAraPE_model.placeStateLike
  | OpenAraPE_rs
  | OpenAraPE_idno
  | OpenAraPE_model.persNamePart
OpenAraPE_model.nameLike_alternation =
  OpenAraPE_model.nameLike.agent_alternation
  | OpenAraPE_model.offsetLike_alternation
  | OpenAraPE_model.placeStateLike_alternation
  | OpenAraPE_rs
  | OpenAraPE_idno
  | OpenAraPE_model.persNamePart_alternation
OpenAraPE_model.nameLike_sequence =
  OpenAraPE_model.nameLike.agent_sequence,
  OpenAraPE_model.offsetLike_sequence,
  OpenAraPE_model.placeStateLike_sequence,
  OpenAraPE_rs,
  OpenAraPE_idno,
  OpenAraPE_model.persNamePart_sequence
OpenAraPE_model.nameLike_sequenceOptional =
  OpenAraPE_model.nameLike.agent_sequenceOptional?,
  OpenAraPE_model.offsetLike_sequenceOptional?,
  OpenAraPE_model.placeStateLike_sequenceOptional?,
  OpenAraPE_rs?,
  OpenAraPE_idno?,
  OpenAraPE_model.persNamePart_sequenceOptional?
OpenAraPE_model.nameLike_sequenceOptionalRepeatable =
  OpenAraPE_model.nameLike.agent_sequenceOptionalRepeatable*,
  OpenAraPE_model.offsetLike_sequenceOptionalRepeatable*,
  OpenAraPE_model.placeStateLike_sequenceOptionalRepeatable*,
  OpenAraPE_rs*,
  OpenAraPE_idno*,
  OpenAraPE_model.persNamePart_sequenceOptionalRepeatable*
OpenAraPE_model.nameLike_sequenceRepeatable =
  OpenAraPE_model.nameLike.agent_sequenceRepeatable+,
  OpenAraPE_model.offsetLike_sequenceRepeatable+,
  OpenAraPE_model.placeStateLike_sequenceRepeatable+,
  OpenAraPE_rs+,
  OpenAraPE_idno+,
  OpenAraPE_model.persNamePart_sequenceRepeatable+
OpenAraPE_model.global =
  OpenAraPE_model.global.meta
  | OpenAraPE_model.milestoneLike
  | OpenAraPE_model.noteLike
  | OpenAraPE_model.global.edit
  | OpenAraPE_figure
  | OpenAraPE_metamark
OpenAraPE_model.biblPart =
  OpenAraPE_model.respLike
  | OpenAraPE_model.imprintPart
  | OpenAraPE_series
  | OpenAraPE_citedRange
  | OpenAraPE_bibl
  | OpenAraPE_edition
  | OpenAraPE_availability
  | OpenAraPE_listRelation
OpenAraPE_model.frontPart = OpenAraPE_model.frontPart.drama
OpenAraPE_model.pPart.data =
  OpenAraPE_model.dateLike
  | OpenAraPE_model.measureLike
  | OpenAraPE_model.addressLike
  | OpenAraPE_model.nameLike
OpenAraPE_model.inter =
  OpenAraPE_model.egLike
  | OpenAraPE_model.oddDecl
  | OpenAraPE_model.biblLike
  | OpenAraPE_model.labelLike
  | OpenAraPE_model.listLike
  | OpenAraPE_model.stageLike
  | OpenAraPE_model.qLike
OpenAraPE_model.common = OpenAraPE_model.divPart | OpenAraPE_model.inter
OpenAraPE_model.phrase =
  OpenAraPE_model.segLike
  | OpenAraPE_model.highlighted
  | OpenAraPE_model.graphicLike
  | OpenAraPE_model.pPart.msdesc
  | OpenAraPE_model.pPart.edit
  | OpenAraPE_model.ptrLike
  | OpenAraPE_model.lPart
  | OpenAraPE_model.phrase.xml
  | OpenAraPE_model.specDescLike
  | OpenAraPE_model.pPart.data
OpenAraPE_model.limitedPhrase =
  OpenAraPE_model.hiLike
  | OpenAraPE_model.emphLike
  | OpenAraPE_model.pPart.msdesc
  | OpenAraPE_model.pPart.editorial
  | OpenAraPE_model.ptrLike
  | OpenAraPE_model.phrase.xml
  | OpenAraPE_model.pPart.data
OpenAraPE_model.divLike = OpenAraPE_div
OpenAraPE_model.divGenLike = notAllowed
OpenAraPE_model.div1Like = notAllowed
OpenAraPE_model.teiHeaderPart =
  OpenAraPE_encodingDesc | OpenAraPE_profileDesc
OpenAraPE_model.sourceDescPart = notAllowed
OpenAraPE_model.encodingDescPart =
  OpenAraPE_projectDesc
  | OpenAraPE_samplingDecl
  | OpenAraPE_editorialDecl
  | OpenAraPE_refsDecl
  | OpenAraPE_listPrefixDef
OpenAraPE_model.editorialDeclPart =
  OpenAraPE_correction
  | OpenAraPE_quotation
  | OpenAraPE_hyphenation
  | OpenAraPE_segmentation
  | OpenAraPE_punctuation
OpenAraPE_model.profileDescPart =
  OpenAraPE_langUsage | OpenAraPE_calendarDesc | OpenAraPE_correspDesc
OpenAraPE_model.correspActionPart =
  OpenAraPE_model.dateLike
  | OpenAraPE_model.addressLike
  | OpenAraPE_model.nameLike
  | OpenAraPE_note
OpenAraPE_model.correspContextPart =
  OpenAraPE_model.ptrLike | OpenAraPE_model.pLike | OpenAraPE_note
OpenAraPE_model.correspDescPart =
  OpenAraPE_note | OpenAraPE_correspAction | OpenAraPE_correspContext
OpenAraPE_att.source.attributes = OpenAraPE_att.source.attribute.source
OpenAraPE_att.source.attribute.source =
  
  ## provides a pointer to the bibliographical source from which a quotation or citation is drawn.
  attribute source {
    list { xsd:anyURI+ }
  }?
OpenAraPE_model.resourceLike = OpenAraPE_text | OpenAraPE_facsimile
OpenAraPE_att.personal.attributes =
  OpenAraPE_att.naming.attributes,
  OpenAraPE_att.personal.attribute.full,
  OpenAraPE_att.personal.attribute.sort
OpenAraPE_att.personal.attribute.full =
  
  ## indicates whether the name component is given in full, as an abbreviation or simply as an initial.
  [ a:defaultValue = "yes" ]
  attribute full {
    
    ## the name component is spelled out in full.
    "yes"
    | 
      ## (abbreviated) the name component is given in an abbreviated form.
      "abb"
    | 
      ## (initial letter) the name component is indicated only by one initial.
      "init"
  }?
OpenAraPE_att.personal.attribute.sort =
  
  ## specifies the sort order of the name component in relation to others within the name.
  attribute sort { xsd:nonNegativeInteger }?
OpenAraPE_model.placeLike = OpenAraPE_place
OpenAraPE_att.milestoneUnit.attributes =
  OpenAraPE_att.milestoneUnit.attribute.unit
OpenAraPE_att.milestoneUnit.attribute.unit =
  
  ## provides a conventional name for the kind of section changing at this milestone.
  ## Suggested values include: 1] page; 2] column; 3] line; 4] book; 5] poem; 6] canto; 7] speaker; 8] stanza; 9] act; 10] scene; 11] section; 12] absent; 13] unnumbered
  attribute unit {
    
    ## physical page breaks (synonymous with the pb element).
    "page"
    | 
      ## column breaks.
      "column"
    | 
      ## line breaks (synonymous with the lb element).
      "line"
    | 
      ## any units termed book, liber, etc.
      "book"
    | 
      ## individual poems in a collection.
      "poem"
    | 
      ## cantos or other major sections of a poem.
      "canto"
    | 
      ## changes of speaker or narrator.
      "speaker"
    | 
      ## stanzas within a poem, book, or canto.
      "stanza"
    | 
      ## acts within a play.
      "act"
    | 
      ## scenes within a play or act.
      "scene"
    | 
      ## sections of any kind.
      "section"
    | 
      ## passages not present in the reference edition.
      "absent"
    | 
      ## passages present in the text, but not to be included as part of the reference.
      "unnumbered"
    | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
  }
OpenAraPE_p =
  
  ## (paragraph) marks paragraphs in prose. [3.1. Paragraphs 7.2.5. Speech Contents]
  element p {
    OpenAraPE_macro.paraContent
    >> sch:pattern [
         id = "tei_OpenAraPE-p-abstractModel-p-constraint-4"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:p or ancestor::tei:ab)          and not(parent::tei:exemplum                |parent::tei:item                |parent::tei:note                |parent::tei:q                |parent::tei:quote                |parent::tei:remarks                |parent::tei:said                |parent::tei:sp                |parent::tei:stage                |parent::tei:cell                |parent::tei:figure)"
             "\x{a}" ~
             "        Abstract model violation: Paragraphs may not contain other paragraphs or ab elements.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "tei_OpenAraPE-p-abstractModel-structure-l-constraint-5"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:p[. = current()])]"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level structural elements such as div, p, or ab.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.fragmentable.attributes,
    OpenAraPE_att.written.attributes,
    empty
  }
OpenAraPE_foreign =
  
  ## identifies a word or phrase as belonging to some language other than that of the surrounding text. [3.3.2.1. Foreign Words or Expressions]
  element foreign {
    OpenAraPE_macro.phraseSeq, OpenAraPE_att.global.attributes, empty
  }
OpenAraPE_hi =
  
  ## (highlighted) marks a word or phrase as graphically distinct from the surrounding text, for reasons concerning which no claim is made. [3.3.2.2. Emphatic Words and Phrases 3.3.2. Emphasis, Foreign Words, and Unusual Language]
  element hi {
    OpenAraPE_macro.paraContent,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.written.attributes,
    empty
  }
OpenAraPE_said =
  
  ## (speech or thought) indicates passages thought or spoken aloud, whether explicitly indicated in the source or not, whether directly or indirectly reported, whether by real people or fictional characters. [3.3.3. Quotation]
  element said {
    OpenAraPE_macro.specialPara,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.ascribed.attributes,
    
    ## may be used to indicate whether the quoted matter is regarded as having been vocalized or signed.
    [ a:defaultValue = "unknown" ]
    attribute aloud {
      xsd:boolean
      | (
         ##
         "unknown"
         | 
           ##
           "inapplicable")
    }?,
    
    ## may be used to indicate whether the quoted matter is regarded as direct or indirect speech.
    [ a:defaultValue = "true" ]
    attribute direct {
      xsd:boolean
      | (
         ##
         "unknown"
         | 
           ##
           "inapplicable")
    }?,
    empty
  }
OpenAraPE_quote =
  
  ## (quotation) contains a phrase or passage attributed by the narrator or author to some agency external to the text. [3.3.3. Quotation 4.3.1. Grouped Texts]
  element quote {
    OpenAraPE_macro.specialPara,
    OpenAraPE_att.global.attribute.xmlid,
    OpenAraPE_att.global.attribute.n,
    OpenAraPE_att.global.attribute.xmllang,
    OpenAraPE_att.global.rendition.attribute.style,
    OpenAraPE_att.global.rendition.attribute.rendition,
    OpenAraPE_att.global.linking.attribute.corresp,
    OpenAraPE_att.global.linking.attribute.next,
    OpenAraPE_att.global.linking.attribute.prev,
    OpenAraPE_att.global.facs.attribute.facs,
    OpenAraPE_att.global.responsibility.attribute.resp,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.source.attributes,
    
    ## (rendition) indicates how the element in question was rendered or presented in the source text.
    ## Suggested values include: 1] brackets; 2] quotation-marks
    [ a:defaultValue = "quotation-marks" ]
    attribute rend {
      list {
        (
         ##
         "brackets"
         | 
           ##
           "quotation-marks"
         | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" })+
      }
    }?,
    empty
  }
OpenAraPE_q =
  
  ## (quoted) contains material which is distinguished from the surrounding text using quotation marks or a similar method, for any one of a variety of reasons including, but not limited to: direct speech or thought, technical terms or jargon, authorial distance, quotations from elsewhere, and passages that are mentioned but not used. [3.3.3. Quotation]
  element q {
    OpenAraPE_macro.specialPara,
    OpenAraPE_att.global.attribute.xmlid,
    OpenAraPE_att.global.attribute.n,
    OpenAraPE_att.global.attribute.xmllang,
    OpenAraPE_att.global.rendition.attribute.style,
    OpenAraPE_att.global.rendition.attribute.rendition,
    OpenAraPE_att.global.linking.attribute.corresp,
    OpenAraPE_att.global.linking.attribute.next,
    OpenAraPE_att.global.linking.attribute.prev,
    OpenAraPE_att.global.facs.attribute.facs,
    OpenAraPE_att.global.responsibility.attribute.resp,
    OpenAraPE_att.ascribed.attributes,
    OpenAraPE_att.source.attributes,
    
    ## (rendition) indicates how the element in question was rendered or presented in the source text.
    ## Suggested values include: 1] brackets; 2] quotation-marks
    [ a:defaultValue = "quotation-marks" ]
    attribute rend {
      list {
        (
         ##
         "brackets"
         | 
           ##
           "quotation-marks"
         | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" })+
      }
    }?,
    
    ## may be used to indicate whether the offset passage is spoken or thought, or to characterize it more finely.
    ## Suggested values include: 1] spoken; 2] thought; 3] written; 4] soCalled; 5] foreign; 6] distinct; 7] term; 8] emph; 9] mentioned
    attribute type {
      
      ## representation of speech
      "spoken"
      | 
        ## representation of thought, e.g. internal monologue
        "thought"
      | 
        ## quotation from a written source
        "written"
      | 
        ## authorial distance
        "soCalled"
      | 
        ##
        "foreign"
      | 
        ## linguistically distinct
        "distinct"
      | 
        ## technical term
        "term"
      | 
        ## rhetorically emphasized
        "emph"
      | 
        ## refering to itself, not its normal referent
        "mentioned"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenAraPE_cit =
  
  ## (cited quotation) contains a quotation from some other document, together with a bibliographic reference to its source. In a dictionary it may contain an example text with at least one occurrence of the word form, used in the sense being described, or a translation of the headword, or an example. [3.3.3. Quotation 4.3.1. Grouped Texts 9.3.5.1. Examples]
  element cit {
    (OpenAraPE_model.qLike
     | OpenAraPE_model.egLike
     | OpenAraPE_model.biblLike
     | OpenAraPE_model.ptrLike
     | OpenAraPE_model.global
     | OpenAraPE_model.entryPart)+,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_term =
  
  ## contains a single-word, multi-word, or symbolic designation which is regarded as a technical term. [3.3.4. Terms, Glosses, Equivalents, and Descriptions]
  element term {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.pointing.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.canonical.attributes,
    OpenAraPE_att.sortable.attributes,
    OpenAraPE_att.cReferencing.attributes,
    empty
  }
OpenAraPE_sic =
  
  ## (Latin for thus or so
  ##    ) contains text reproduced although apparently incorrect or inaccurate. [3.4.1. Apparent Errors]
  element sic {
    OpenAraPE_macro.paraContent,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.source.attributes,
    empty
  }
OpenAraPE_corr =
  
  ## (correction) contains the correct form of a passage apparently erroneous in the copy text. [3.4.1. Apparent Errors]
  element corr {
    OpenAraPE_macro.paraContent,
    OpenAraPE_att.global.attribute.xmlid,
    OpenAraPE_att.global.attribute.n,
    OpenAraPE_att.global.attribute.xmllang,
    OpenAraPE_att.global.rendition.attribute.rend,
    OpenAraPE_att.global.rendition.attribute.style,
    OpenAraPE_att.global.rendition.attribute.rendition,
    OpenAraPE_att.global.linking.attribute.corresp,
    OpenAraPE_att.global.linking.attribute.next,
    OpenAraPE_att.global.linking.attribute.prev,
    OpenAraPE_att.global.facs.attribute.facs,
    OpenAraPE_att.typed.attributes,
    
    ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
    attribute resp {
      list { xsd:anyURI+ }
    },
    empty
  }
OpenAraPE_choice =
  
  ## groups a number of alternative encodings for the same point in a text. [3.4. Simple Editorial Changes]
  element choice {
    (OpenAraPE_model.choicePart | OpenAraPE_choice)*,
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_reg =
  
  ## (regularization) contains a reading which has been regularized or normalized in some sense. [3.4.2. Regularization and
  ## Normalization 12. Critical Apparatus]
  element reg {
    OpenAraPE_macro.paraContent,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_orig =
  
  ## (original form) contains a reading which is marked as following the original, rather than being normalized or corrected. [3.4.2. Regularization and
  ## Normalization 12. Critical Apparatus]
  element orig {
    OpenAraPE_macro.paraContent,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.source.attributes,
    empty
  }
OpenAraPE_gap =
  
  ## indicates a point where material has been omitted in a transcription, whether for editorial reasons described in the TEI header, as part of sampling practice, or because the material is illegible, invisible, or inaudible. [3.4.3. Additions, Deletions, and Omissions]
  element gap {
    (OpenAraPE_model.descLike | OpenAraPE_model.certLike)*,
    OpenAraPE_att.global.attribute.xmlid,
    OpenAraPE_att.global.attribute.n,
    OpenAraPE_att.global.attribute.xmllang,
    OpenAraPE_att.global.rendition.attribute.rend,
    OpenAraPE_att.global.rendition.attribute.style,
    OpenAraPE_att.global.rendition.attribute.rendition,
    OpenAraPE_att.global.linking.attribute.corresp,
    OpenAraPE_att.global.linking.attribute.next,
    OpenAraPE_att.global.linking.attribute.prev,
    OpenAraPE_att.global.facs.attribute.facs,
    OpenAraPE_att.timed.attributes,
    
    ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
    [ a:defaultValue = "#org_MS" ]
    attribute resp {
      list { xsd:anyURI+ }
    },
    
    ## gives the reason for omission. Sample values include sampling, inaudible, irrelevant, cancelled.
    attribute reason {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    
    ## in the case of text omitted from the transcription because of deliberate deletion by an identifiable hand, indicates the hand which made the deletion.
    attribute hand { xsd:anyURI }?,
    
    ## in the case of text omitted because of damage, categorizes the cause of the damage, if it can be identified.
    ## Sample values include: 1] rubbing; 2] mildew; 3] smoke
    attribute agent {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenAraPE_add =
  
  ## (addition) contains letters, words, or phrases inserted in the source text by an author, scribe, or a previous annotator or corrector. [3.4.3. Additions, Deletions, and Omissions]
  element add {
    OpenAraPE_macro.paraContent,
    OpenAraPE_att.global.attribute.xmlid,
    OpenAraPE_att.global.attribute.n,
    OpenAraPE_att.global.attribute.xmllang,
    OpenAraPE_att.global.rendition.attribute.rend,
    OpenAraPE_att.global.rendition.attribute.style,
    OpenAraPE_att.global.rendition.attribute.rendition,
    OpenAraPE_att.global.linking.attribute.corresp,
    OpenAraPE_att.global.linking.attribute.next,
    OpenAraPE_att.global.linking.attribute.prev,
    OpenAraPE_att.global.facs.attribute.facs,
    OpenAraPE_att.transcriptional.attributes,
    OpenAraPE_att.placement.attributes,
    OpenAraPE_att.typed.attributes,
    
    ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
    attribute resp {
      list { xsd:anyURI+ }
    },
    empty
  }
OpenAraPE_del =
  
  ## (deletion) contains a letter, word, or passage deleted, marked as deleted, or otherwise indicated as superfluous or spurious in the copy text by an author, scribe, or a previous annotator or corrector. [3.4.3. Additions, Deletions, and Omissions]
  element del {
    OpenAraPE_macro.paraContent,
    OpenAraPE_att.global.attribute.xmlid,
    OpenAraPE_att.global.attribute.n,
    OpenAraPE_att.global.attribute.xmllang,
    OpenAraPE_att.global.rendition.attribute.rend,
    OpenAraPE_att.global.rendition.attribute.style,
    OpenAraPE_att.global.rendition.attribute.rendition,
    OpenAraPE_att.global.linking.attribute.corresp,
    OpenAraPE_att.global.linking.attribute.next,
    OpenAraPE_att.global.linking.attribute.prev,
    OpenAraPE_att.global.facs.attribute.facs,
    OpenAraPE_att.transcriptional.attributes,
    OpenAraPE_att.typed.attributes,
    
    ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
    attribute resp {
      list { xsd:anyURI+ }
    },
    empty
  }
OpenAraPE_unclear =
  
  ## contains a word, phrase, or passage which cannot be transcribed with certainty because it is illegible or inaudible in the source. [11.3.3.1. Damage, Illegibility, and Supplied Text 3.4.3. Additions, Deletions, and Omissions]
  element unclear {
    OpenAraPE_macro.paraContent,
    OpenAraPE_att.global.attributes,
    
    ## indicates why the material is hard to transcribe.
    attribute reason {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    
    ## Where the difficulty in transcription arises from action (partial deletion, etc.) assignable to an identifiable hand, signifies the hand responsible for the action.
    attribute hand { xsd:anyURI }?,
    
    ## Where the difficulty in transcription arises from damage, categorizes the cause of the damage, if it can be identified.
    ## Sample values include: 1] rubbing; 2] mildew; 3] smoke
    attribute agent {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenAraPE_name =
  
  ## (name, proper noun) contains a proper noun or noun phrase. [3.5.1. Referring Strings]
  element name {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.personal.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_rs =
  
  ## (referencing string) contains a general purpose name or referring string. [13.2.1. Personal Names 3.5.1. Referring Strings]
  element rs {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.naming.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.source.attributes,
    empty
  }
OpenAraPE_num =
  
  ## (number) contains a number, written in any form. [3.5.3. Numbers and
  ## Measures]
  element num {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    
    ## 
    ## Suggested values include: 1] d1; 2] d2; 3] d3; 4] d4; 5] d5; 6] d6
    attribute subtype {
      
      ## Single digit
      "d1"
      | 
        ## Two digits
        "d2"
      | 
        ## Three digits
        "d3"
      | 
        ## Four digits
        "d4"
      | 
        ## Five digits
        "d5"
      | 
        ## Six digits
        "d6"
      | xsd:Name
    }?,
    
    ## indicates the type of numeric value.
    ## Suggested values include: 1] cardinal; 2] ordinal; 3] fraction; 4] percentage
    attribute type {
      
      ## absolute number, e.g. 21, 21.5
      "cardinal"
      | 
        ## ordinal number, e.g. 21st
        "ordinal"
      | 
        ## fraction, e.g. one half or three-quarters
        "fraction"
      | 
        ## a percentage
        "percentage"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## supplies the value of the number in standard form.
    attribute value {
      xsd:double
      | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
      | xsd:decimal
    }?,
    empty
  }
OpenAraPE_measure =
  
  ## contains a word or phrase referring to some quantity of an object or commodity, usually comprising a number, a unit, and a commodity name. [3.5.3. Numbers and
  ## Measures]
  element measure {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.measurement.attributes,
    
    ## specifies the type of measurement in any convenient typology.
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenAraPE_measureGrp =
  
  ## (measure group) contains a group of dimensional specifications which relate to the same object, for example the height and width of a manuscript page. [10.3.4. Dimensions]
  element measureGrp {
    (text | OpenAraPE_model.gLike | OpenAraPE_model.measureLike)*,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.measurement.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_date =
  
  ## contains a date in any format. [3.5.4. Dates and Times 2.2.4. Publication, Distribution, Licensing, etc. 2.6. The Revision Description 3.11.2.4. Imprint, Size of a Document, and Reprint Information 15.2.3. The Setting Description 13.3.6. Dates and Times]
  element date {
    (text
     | OpenAraPE_model.gLike
     | OpenAraPE_model.phrase
     | OpenAraPE_model.global)*,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.w3c.attribute.when,
    OpenAraPE_att.datable.w3c.attribute.notBefore,
    OpenAraPE_att.datable.w3c.attribute.notAfter,
    OpenAraPE_att.datable.w3c.attribute.from,
    OpenAraPE_att.datable.w3c.attribute.to,
    OpenAraPE_att.datable.iso.attribute.when-iso,
    OpenAraPE_att.datable.iso.attribute.notBefore-iso,
    OpenAraPE_att.datable.iso.attribute.notAfter-iso,
    OpenAraPE_att.datable.iso.attribute.from-iso,
    OpenAraPE_att.datable.iso.attribute.to-iso,
    OpenAraPE_att.datable.custom.attribute.when-custom,
    OpenAraPE_att.datable.custom.attribute.notBefore-custom,
    OpenAraPE_att.datable.custom.attribute.notAfter-custom,
    OpenAraPE_att.datable.custom.attribute.from-custom,
    OpenAraPE_att.datable.custom.attribute.to-custom,
    OpenAraPE_att.typed.attribute.subtype,
    (
     ## indicates the system or calendar to which the date represented by the content of this element belongs.
     attribute calendar {
       
       ##
       "#cal_gregorian"
       | 
         ##
         "#cal_islamic"
       | 
         ##
         "#cal_julian"
       | 
         ##
         "#cal_ottomanfiscal"
     }?)
    >> sch:pattern [
         id = "tei_OpenAraPE-date-calendar-calendar-constraint-9"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:*[@calendar]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "string-length(.) gt 0"
             "\x{a}" ~
             "@calendar indicates the system or calendar to which the date represented by the content of this element\x{a}" ~
             "belongs, but this "
             sch:name [ ]
             " element has no textual content."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    
    ## supplies a pointer to a calendar element or other means of interpreting the values of the custom dating attributes.
    attribute datingMethod {
      
      ##
      "#cal_gregorian"
      | 
        ##
        "#cal_islamic"
      | 
        ##
        "#cal_julian"
      | 
        ##
        "#cal_ottomanfiscal"
    }?,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Suggested values include: 1] official; 2] scheduled; 3] supplied
    attribute type {
      
      ## A publication date as provided on the masthead
      "official"
      | 
        ## A publication date according to the publication schedule
        "scheduled"
      | 
        ## A publication date as indicated by other sources
        "supplied"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenAraPE_time =
  
  ## contains a phrase defining a time of day in any format. [3.5.4. Dates and Times]
  element time {
    (text
     | OpenAraPE_model.gLike
     | OpenAraPE_model.phrase
     | OpenAraPE_model.global)*,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_abbr =
  
  ## (abbreviation) contains an abbreviation of any sort. [3.5.5. Abbreviations and Their Expansions]
  element abbr {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.source.attributes,
    OpenAraPE_att.typed.attribute.subtype,
    
    ## allows the encoder to classify the abbreviation according to some convenient typology.
    ## Sample values include: 1] suspension; 2] contraction; 3] brevigraph; 4] superscription; 5] acronym; 6] title; 7] organization; 8] geographic
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenAraPE_expan =
  
  ## (expansion) contains the expansion of an abbreviation. [3.5.5. Abbreviations and Their Expansions]
  element expan {
    OpenAraPE_macro.phraseSeq, OpenAraPE_att.global.attributes, empty
  }
OpenAraPE_ptr =
  
  ## (pointer) defines a pointer to another location. [3.6. Simple Links and Cross-References 16.1. Links]
  element ptr {
    empty
    >> sch:pattern [
         id = "tei_OpenAraPE-ptr-ptrAtts-constraint-6"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ptr"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "attributes @target and @cRef may be supplied on "
             sch:name [ ]
             "."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.pointing.attributes,
    OpenAraPE_att.internetMedia.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.cReferencing.attributes,
    empty
  }
OpenAraPE_ref =
  
  ## (reference) defines a reference to another location, possibly modified by additional text or comment. [3.6. Simple Links and Cross-References 16.1. Links]
  element ref {
    OpenAraPE_macro.paraContent
    >> sch:pattern [
         id = "tei_OpenAraPE-ref-refAtts-constraint-7"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ref"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "	attributes @target' and @cRef' may be supplied on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.pointing.attributes,
    OpenAraPE_att.internetMedia.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.cReferencing.attributes,
    empty
  }
OpenAraPE_list =
  
  ## contains any sequence of items organized as a list. [3.7. Lists]
  element list {
    ((OpenAraPE_model.divTop | OpenAraPE_model.global)*,
     ((OpenAraPE_item, OpenAraPE_model.global*)+
      | (OpenAraPE_label,
         OpenAraPE_model.global*,
         OpenAraPE_item,
         OpenAraPE_model.global*)+),
     (OpenAraPE_model.divBottom, OpenAraPE_model.global*)*)
    >> sch:pattern [
         id =
           "tei_OpenAraPE-list-gloss-list-must-have-labels-constraint-10"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:list[@type='gloss']"
           "\x{a}" ~
           "	              "
           sch:assert [
             test = "tei:label"
             'The content of a "gloss" list should include a sequence of one or more pairs of a label element followed by an item element'
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.sortable.attributes,
    OpenAraPE_att.typed.attribute.subtype,
    
    ## describes the nature of the items in the list.
    ## Suggested values include: 1] gloss; 2] index; 3] instructions; 4] litany; 5] syllogism
    attribute type {
      
      ## each list item glosses some term or concept, which is given by a label element preceding the list item.
      "gloss"
      | 
        ## each list item is an entry in an index such as the alphabetical topical index at the back of a print volume.
        "index"
      | 
        ## each list item is a step in a sequence of instructions, as in a recipe.
        "instructions"
      | 
        ## each list item is one of a sequence of petitions, supplications or invocations, typically in a religious ritual.
        "litany"
      | 
        ## each list item is part of an argument consisting of two or more propositions and a final conclusion derived from them.
        "syllogism"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenAraPE_item =
  
  ## contains one component of a list. [3.7. Lists 2.6. The Revision Description]
  element item {
    OpenAraPE_macro.specialPara,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.sortable.attributes,
    empty
  }
OpenAraPE_label =
  
  ## contains any label or heading used to identify part of a text, typically but not exclusively in a list or glossary. [3.7. Lists]
  element label {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.placement.attributes,
    OpenAraPE_att.written.attributes,
    empty
  }
OpenAraPE_head =
  
  ## (heading) contains any type of heading, for example the title of a section, or the heading of a list, glossary, manuscript description, etc. [4.2.1. Headings and Trailers]
  element head {
    (text
     | OpenAraPE_lg
     | OpenAraPE_model.gLike
     | OpenAraPE_model.phrase
     | OpenAraPE_model.inter
     | OpenAraPE_model.lLike
     | OpenAraPE_model.global)*,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.written.attributes,
    empty
  }
OpenAraPE_note =
  
  ## contains a note or annotation. [3.8.1. Notes and Simple Annotation 2.2.6. The Notes Statement 3.11.2.8. Notes and Statement of Language 9.3.5.4. Notes within Entries]
  element note {
    OpenAraPE_macro.specialPara,
    OpenAraPE_att.global.attribute.xmlid,
    OpenAraPE_att.global.attribute.xmllang,
    OpenAraPE_att.global.rendition.attribute.rend,
    OpenAraPE_att.global.rendition.attribute.style,
    OpenAraPE_att.global.rendition.attribute.rendition,
    OpenAraPE_att.global.linking.attribute.corresp,
    OpenAraPE_att.global.linking.attribute.next,
    OpenAraPE_att.global.linking.attribute.prev,
    OpenAraPE_att.global.facs.attribute.facs,
    OpenAraPE_att.global.responsibility.attribute.resp,
    OpenAraPE_att.placement.attributes,
    OpenAraPE_att.pointing.attributes,
    OpenAraPE_att.source.attributes,
    OpenAraPE_att.typed.attribute.subtype,
    OpenAraPE_att.written.attributes,
    
    ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
    [ a:defaultValue = "1" ] attribute n { xsd:string }?,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Suggested values include: 1] endnote; 2] footnote; 3] gloss; 4] inline
    [ a:defaultValue = "footnote" ]
    attribute type {
      
      ##
      "endnote"
      | 
        ##
        "footnote"
      | 
        ##
        "gloss"
      | 
        ##
        "inline"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## indicates whether the copy text shows the exact place of reference for the note.
    [ a:defaultValue = "true" ] attribute anchored { xsd:boolean }?,
    
    ## points to the end of the span to which the note is attached, if the note is not embedded in the text at that point.
    attribute targetEnd {
      list { xsd:anyURI+ }
    }?,
    empty
  }
OpenAraPE_index =
  
  ## (index entry) marks a location to be indexed for whatever purpose. [3.8.2. Index Entries]
  element index {
    (OpenAraPE_term, OpenAraPE_index?)*,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.spanning.attributes,
    
    ## a single word which follows the rules defining a legal XML name (see ), supplying a name to specify which index (of several) the index entry belongs to.
    attribute indexName { xsd:Name }?,
    empty
  }
OpenAraPE_graphic =
  
  ## indicates the location of a graphic or illustration, either forming part of a text, or providing an image of it. [3.9. Graphics and Other Non-textual Components 11.1. Digital Facsimiles]
  element graphic {
    OpenAraPE_model.descLike*,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.media.attributes,
    OpenAraPE_att.resourced.attributes,
    empty
  }
OpenAraPE_milestone =
  
  ## marks a boundary point separating any kind of section of a text, typically but not necessarily indicating a point at which some part of a standard reference system changes, where the change is not represented by a structural element. [3.10.3. Milestone
  ## Elements]
  element milestone {
    empty,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.milestoneUnit.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.edition.attributes,
    OpenAraPE_att.spanning.attributes,
    OpenAraPE_att.breaking.attributes,
    empty
  }
OpenAraPE_gb =
  
  ## (gathering begins) marks the point in a transcribed codex at which a new gathering or quire begins. [3.10.3. Milestone
  ## Elements]
  element gb {
    empty,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.spanning.attributes,
    OpenAraPE_att.breaking.attributes,
    empty
  }
OpenAraPE_pb =
  
  ## (page break) marks the start of a new page in a paginated document. [3.10.3. Milestone
  ## Elements]
  element pb {
    empty,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.edition.attribute.edRef,
    OpenAraPE_att.spanning.attributes,
    OpenAraPE_att.breaking.attributes,
    
    ## (edition) supplies a sigil or other arbitrary identifier for the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
    ## Suggested values include: 1] print; 2] shamela
    [ a:defaultValue = "print" ]
    attribute ed {
      list {
        (
         ## Page break according to a printed edition
         "print"
         | 
           ## Page break as found in the transcription from Maktabat al-Shamela
           "shamela"
         | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" })+
      }
    }?,
    empty
  }
OpenAraPE_lb =
  
  ## (line break) marks the start of a new (typographic) line in some edition or version of a text. [3.10.3. Milestone
  ## Elements 7.2.5. Speech Contents]
  element lb {
    empty,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.edition.attributes,
    OpenAraPE_att.spanning.attributes,
    OpenAraPE_att.breaking.attributes,
    empty
  }
OpenAraPE_cb =
  
  ## (column break) marks the beginning of a new column of a text on a multi-column page. [3.10.3. Milestone
  ## Elements]
  element cb {
    empty,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.edition.attributes,
    OpenAraPE_att.spanning.attributes,
    OpenAraPE_att.breaking.attributes,
    empty
  }
OpenAraPE_monogr =
  
  ## (monographic level) contains bibliographic elements describing an item (e.g. a book or journal) published as an independent item (i.e. as a separate physical object). [3.11.2.1. Analytic, Monographic, and Series Levels]
  element monogr {
    ((((OpenAraPE_author | OpenAraPE_editor | OpenAraPE_respStmt),
       (OpenAraPE_author | OpenAraPE_editor | OpenAraPE_respStmt)*,
       OpenAraPE_title+,
       (OpenAraPE_model.ptrLike
        | OpenAraPE_idno
        | OpenAraPE_editor
        | OpenAraPE_respStmt)*)
      | ((OpenAraPE_title | OpenAraPE_model.ptrLike | OpenAraPE_idno)+,
         (OpenAraPE_author | OpenAraPE_editor | OpenAraPE_respStmt)*)
      | (OpenAraPE_authority, OpenAraPE_idno))?,
     OpenAraPE_availability*,
     OpenAraPE_model.noteLike*,
     (OpenAraPE_edition,
      (OpenAraPE_idno
       | OpenAraPE_model.ptrLike
       | OpenAraPE_editor
       | OpenAraPE_funder
       | OpenAraPE_respStmt)*)*,
     OpenAraPE_imprint,
     (OpenAraPE_imprint | OpenAraPE_biblScope)*),
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_series =
  
  ## (series information) contains information about the series in which a book or other bibliographic item has appeared. [3.11.2.1. Analytic, Monographic, and Series Levels]
  element series {
    (text
     | OpenAraPE_model.gLike
     | OpenAraPE_title
     | OpenAraPE_model.ptrLike
     | OpenAraPE_editor
     | OpenAraPE_respStmt
     | OpenAraPE_biblScope
     | OpenAraPE_idno
     | OpenAraPE_model.global
     | OpenAraPE_availability)*,
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_author =
  
  ## in a bibliographic reference, contains the name(s) of an author, personal or corporate, of a work; for example in the same form as that provided by a recognized bibliographic name authority. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement]
  element author {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.naming.attributes,
    empty
  }
OpenAraPE_editor =
  
  ## contains a secondary statement of responsibility for a bibliographic item, for example the name of an individual, institution or organization, (or of several such) acting as editor, compiler, translator, etc. [3.11.2.2. Titles, Authors, and Editors]
  element editor {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.naming.attributes,
    empty
  }
OpenAraPE_respStmt =
  
  ## (statement of responsibility) supplies a statement of responsibility for the intellectual content of a text, edition, recording, or series, where the specialized elements for authors, editors, etc. do not suffice or do not apply. May also be used to encode information about individuals or organizations which have played a role in the production or distribution of a bibliographic work. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.2. The Edition Statement 2.2.5. The Series Statement]
  element respStmt {
    ((OpenAraPE_resp+, OpenAraPE_model.nameLike.agent+)
     | (OpenAraPE_model.nameLike.agent+, OpenAraPE_resp+)),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.canonical.attributes,
    empty
  }
OpenAraPE_resp =
  
  ## (responsibility) contains a phrase describing the nature of a person's intellectual responsibility, or an organization's role in the production or distribution of a work. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.2. The Edition Statement 2.2.5. The Series Statement]
  element resp {
    OpenAraPE_macro.phraseSeq.limited,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.canonical.attributes,
    OpenAraPE_att.datable.attributes,
    empty
  }
OpenAraPE_title =
  
  ## contains a title for any kind of work. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.5. The Series Statement]
  element title {
    OpenAraPE_macro.paraContent,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.canonical.attributes,
    OpenAraPE_att.typed.attribute.subtype,
    
    ## classifies the title according to some convenient typology.
    ## Sample values include: 1] main; 2] sub(subordinate) ; 3] alt(alternate) ; 4] short; 5] desc(descriptive) 
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## indicates the bibliographic level for a title, that is, whether it identifies an article, book, journal, series, or unpublished material.
    attribute level {
      
      ## (analytic) the title applies to an analytic item, such as an article, poem, or other work published as part of a larger item.
      "a"
      | 
        ## (monographic) the title applies to a monograph such as a book or other item considered to be a distinct publication, including single volumes of multi-volume works
        "m"
      | 
        ## (journal) the title applies to any serial or periodical publication such as a journal, magazine, or newspaper
        "j"
      | 
        ## (series) the title applies to a series of otherwise distinct publications such as a collection
        "s"
      | 
        ## (unpublished) the title applies to any unpublished material (including theses and dissertations unless published by a commercial press)
        "u"
    }?,
    empty
  }
OpenAraPE_imprint =
  
  ## groups information relating to the publication or distribution of a bibliographic item. [3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element imprint {
    (empty*,
     ((OpenAraPE_model.imprintPart | OpenAraPE_model.dateLike),
      OpenAraPE_respStmt*,
      OpenAraPE_model.global*)+),
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_publisher =
  
  ## provides the name of the organization responsible for the publication or distribution of a bibliographic item. [3.11.2.4. Imprint, Size of a Document, and Reprint Information 2.2.4. Publication, Distribution, Licensing, etc.]
  element publisher {
    OpenAraPE_macro.phraseSeq, OpenAraPE_att.global.attributes, empty
  }
OpenAraPE_biblScope =
  
  ## (scope of bibliographic reference) defines the scope of a bibliographic reference, for example as a list of page numbers, or a named subdivision of a larger work. [3.11.2.5. Scopes and Ranges in Bibliographic Citations]
  element biblScope {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.citing.attributes,
    empty
  }
OpenAraPE_citedRange =
  
  ## (cited range) defines the range of cited content, often represented by pages or other units [3.11.2.5. Scopes and Ranges in Bibliographic Citations]
  element citedRange {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.pointing.attributes,
    OpenAraPE_att.citing.attributes,
    empty
  }
OpenAraPE_pubPlace =
  
  ## (publication place) contains the name of the place where a bibliographic item was published. [3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element pubPlace {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.naming.attributes,
    empty
  }
OpenAraPE_bibl =
  
  ## (bibliographic citation) contains a loosely-structured bibliographic citation of which the sub-components may or may not be explicitly tagged. [3.11.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 15.3.2. Declarable Elements]
  element bibl {
    (text
     | OpenAraPE_model.gLike
     | OpenAraPE_model.highlighted
     | OpenAraPE_model.pPart.data
     | OpenAraPE_model.pPart.edit
     | OpenAraPE_model.segLike
     | OpenAraPE_model.ptrLike
     | OpenAraPE_model.biblPart
     | OpenAraPE_model.global)*,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.declarable.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.sortable.attributes,
    OpenAraPE_att.docStatus.attributes,
    empty
  }
OpenAraPE_biblStruct =
  
  ## (structured bibliographic citation) contains a structured bibliographic citation, in which only bibliographic sub-elements appear and in a specified order. [3.11.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 15.3.2. Declarable Elements]
  element biblStruct {
    ((OpenAraPE_monogr, OpenAraPE_series*)+,
     (OpenAraPE_model.noteLike
      | OpenAraPE_idno
      | OpenAraPE_model.ptrLike
      | OpenAraPE_citedRange)*)
    >> sch:pattern [
         id =
           "tei_OpenAraPE-biblStruct-deprecate-altIdentifier-child-constraint-8"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:biblStruct"
           "\x{a}" ~
           "               "
           sch:report [
             test = "child::tei:idno"
             role = "nonfatal"
             "WARNING: use of deprecated method — the use of the idno element as a direct child of the biblStruct element will be removed from the TEI on 2016-09-18"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.declarable.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.sortable.attributes,
    OpenAraPE_att.docStatus.attributes,
    empty
  }
OpenAraPE_listBibl =
  
  ## (citation list) contains a list of bibliographic citations of any kind. [3.11.1. Methods of Encoding Bibliographic References and Lists of References 2.2.7. The Source Description 15.3.2. Declarable Elements]
  element listBibl {
    (OpenAraPE_model.headLike*,
     (OpenAraPE_model.biblLike | OpenAraPE_model.milestoneLike)+,
     (OpenAraPE_relation | OpenAraPE_listRelation)*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.sortable.attributes,
    OpenAraPE_att.declarable.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_l =
  
  ## (verse line) contains a single, possibly incomplete, line of verse. [3.12.1. Core Tags for Verse 3.12. Passages of Verse or Drama 7.2.5. Speech Contents]
  element l {
    ((text
      | OpenAraPE_model.gLike
      | OpenAraPE_model.phrase
      | OpenAraPE_model.inter
      | OpenAraPE_model.global)*)
    >> sch:pattern [
         id = "tei_OpenAraPE-l-abstractModel-structure-l-constraint-9"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:l"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:l[. = current()])]"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain lines or lg elements.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    OpenAraPE_att.fragmentable.attributes,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    [ a:defaultValue = "bayt" ]
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenAraPE_lg =
  
  ## (line group) contains one or more verse lines functioning as a formal unit, e.g. a stanza, refrain, verse paragraph, etc. [3.12.1. Core Tags for Verse 3.12. Passages of Verse or Drama 7.2.5. Speech Contents]
  element lg {
    ((OpenAraPE_model.divTop | OpenAraPE_model.global)*,
     (OpenAraPE_model.lLike
      | OpenAraPE_model.stageLike
      | OpenAraPE_model.labelLike
      | OpenAraPE_lg),
     (OpenAraPE_model.lLike
      | OpenAraPE_model.stageLike
      | OpenAraPE_model.labelLike
      | OpenAraPE_model.global
      | OpenAraPE_lg)*,
     (OpenAraPE_model.divBottom, OpenAraPE_model.global*)*)
    >> sch:pattern [
         id = "tei_OpenAraPE-lg-atleast1oflggapl-constraint-8"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:lg"
           "\x{a}" ~
           "               "
           sch:assert [
             test =
               "count(descendant::tei:lg|descendant::tei:l|descendant::tei:gap) > 0"
             "An lg element\x{a}" ~
             "        must contain at least one child l, lg or gap element."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "tei_OpenAraPE-lg-abstractModel-structure-l-constraint-10"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:lg"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:lg[. = current()])]"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain line groups.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.divLike.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_teiCorpus =
  
  ## contains the whole of a TEI encoded corpus, comprising a single corpus header and one or more TEI elements, each containing a single text header and a text. [4. Default Text Structure 15.1. Varieties of Composite Text]
  element teiCorpus {
    (OpenAraPE_teiHeader,
     ((OpenAraPE_model.resourceLike+,
       (OpenAraPE_TEI | OpenAraPE_teiCorpus)*)
      | (OpenAraPE_TEI | OpenAraPE_teiCorpus)+)),
    OpenAraPE_att.global.attributes,
    
    ## The version of the TEI scheme
    [ a:defaultValue = "5.0" ]
    attribute version {
      xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
    }?,
    empty
  }
OpenAraPE_att.patternReplacement.attributes =
  OpenAraPE_att.patternReplacement.attribute.matchPattern,
  OpenAraPE_att.patternReplacement.attribute.replacementPattern
OpenAraPE_att.patternReplacement.attribute.matchPattern =
  
  ## specifies a regular expression against which the values of other attributes can be matched.
  attribute matchPattern { xsd:token }
OpenAraPE_att.patternReplacement.attribute.replacementPattern =
  
  ## specifies a replacement pattern, that is, the skeleton of a relative or absolute URI containing references to groups in the matchPattern which, once subpattern substitution has been performed, complete the URI.
  attribute replacementPattern { text }
OpenAraPE_teiHeader =
  
  ## (TEI header) supplies descriptive and declarative metadata associated with a digital resource or set of resources. [2.1.1. The TEI Header and Its Components 15.1. Varieties of Composite Text]
  element teiHeader {
    (OpenAraPE_fileDesc,
     OpenAraPE_model.teiHeaderPart*,
     OpenAraPE_revisionDesc?),
    OpenAraPE_att.global.attributes,
    
    ## specifies the kind of document to which the header is attached, for example whether it is a corpus or individual text.
    ## Sample values include: 1] text; 2] corpus
    [ a:defaultValue = "text" ]
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenAraPE_fileDesc =
  
  ## (file description) contains a full bibliographic description of an electronic file. [2.2. The File Description 2.1.1. The TEI Header and Its Components]
  element fileDesc {
    ((OpenAraPE_titleStmt,
      OpenAraPE_editionStmt?,
      OpenAraPE_publicationStmt,
      OpenAraPE_seriesStmt?,
      OpenAraPE_notesStmt?),
     OpenAraPE_sourceDesc+),
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_titleStmt =
  
  ## (title statement) groups information about the title of a work and those responsible for its content. [2.2.1. The Title Statement 2.2. The File Description]
  element titleStmt {
    (OpenAraPE_title+, OpenAraPE_model.respLike*),
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_funder =
  
  ## (funding body) specifies the name of an individual, institution, or organization responsible for the funding of a project or text. [2.2.1. The Title Statement]
  element funder {
    OpenAraPE_macro.phraseSeq.limited,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.canonical.attributes,
    empty
  }
OpenAraPE_editionStmt =
  
  ## (edition statement) groups information relating to one edition of a text. [2.2.2. The Edition Statement 2.2. The File Description]
  element editionStmt {
    (OpenAraPE_model.pLike+
     | (OpenAraPE_edition, OpenAraPE_model.respLike*)),
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_edition =
  
  ## describes the particularities of one edition of a text. [2.2.2. The Edition Statement]
  element edition {
    OpenAraPE_macro.phraseSeq, OpenAraPE_att.global.attributes, empty
  }
OpenAraPE_publicationStmt =
  
  ## (publication statement) groups information concerning the publication or distribution of an electronic or other text. [2.2.4. Publication, Distribution, Licensing, etc. 2.2. The File Description]
  element publicationStmt {
    ((OpenAraPE_model.publicationStmtPart.agency,
      OpenAraPE_model.publicationStmtPart.detail*)+
     | OpenAraPE_model.pLike+),
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_distributor =
  
  ## supplies the name of a person or other agency responsible for the distribution of a text. [2.2.4. Publication, Distribution, Licensing, etc.]
  element distributor {
    OpenAraPE_macro.phraseSeq, OpenAraPE_att.global.attributes, empty
  }
OpenAraPE_authority =
  
  ## (release authority) supplies the name of a person or other agency responsible for making a work available, other than a publisher or distributor. [2.2.4. Publication, Distribution, Licensing, etc.]
  element authority {
    OpenAraPE_macro.phraseSeq.limited,
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_idno =
  
  ## (identifier) supplies any form of identifier used to identify some object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized way. [2.2.4. Publication, Distribution, Licensing, etc. 2.2.5. The Series Statement 3.11.2.4. Imprint, Size of a Document, and Reprint Information]
  element idno {
    (text | OpenAraPE_model.gLike | OpenAraPE_idno)*,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.sortable.attributes,
    
    ## categorizes the identifier, for example as an ISBN, Social Security number, etc.
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenAraPE_availability =
  
  ## supplies information about the availability of a text, for example any restrictions on its use or distribution, its copyright status, any licence applying to it, etc. [2.2.4. Publication, Distribution, Licensing, etc.]
  element availability {
    (OpenAraPE_model.availabilityPart | OpenAraPE_model.pLike)+,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.declarable.attributes,
    
    ## supplies a code identifying the current availability of the text.
    [ a:defaultValue = "unknown" ]
    attribute status {
      
      ## the text is freely available.
      "free"
      | 
        ## the status of the text is unknown.
        "unknown"
      | 
        ## the text is not freely available.
        "restricted"
    }?,
    empty
  }
OpenAraPE_licence =
  
  ## contains information about a licence or other legal agreement applicable to the text. [2.2.4. Publication, Distribution, Licensing, etc.]
  element licence {
    OpenAraPE_macro.specialPara,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.pointing.attributes,
    OpenAraPE_att.datable.attributes,
    empty
  }
OpenAraPE_seriesStmt =
  
  ## (series statement) groups information about the series, if any, to which a publication belongs. [2.2.5. The Series Statement 2.2. The File Description]
  element seriesStmt {
    (OpenAraPE_model.pLike+
     | (OpenAraPE_title+,
        (OpenAraPE_editor | OpenAraPE_respStmt)*,
        (OpenAraPE_idno | OpenAraPE_biblScope)*)),
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_notesStmt =
  
  ## (notes statement) collects together any notes providing information about a text additional to that recorded in other parts of the bibliographic description. [2.2.6. The Notes Statement 2.2. The File Description]
  element notesStmt {
    (OpenAraPE_model.noteLike)+, OpenAraPE_att.global.attributes, empty
  }
OpenAraPE_sourceDesc =
  
  ## (source description) describes the source from which an electronic text was derived or generated, typically a bibliographic description in the case of a digitized text, or a phrase such as "born digital" for a text which has no previous existence. [2.2.7. The Source Description]
  element sourceDesc {
    (OpenAraPE_model.pLike+
     | (OpenAraPE_model.biblLike
        | OpenAraPE_model.sourceDescPart
        | OpenAraPE_model.listLike)+),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.declarable.attributes,
    empty
  }
OpenAraPE_biblFull =
  
  ## (fully-structured bibliographic citation) contains a fully-structured bibliographic citation, in which all components of the TEI file description are present. [3.11.1. Methods of Encoding Bibliographic References and Lists of References 2.2. The File Description 2.2.7. The Source Description 15.3.2. Declarable Elements]
  element biblFull {
    ((OpenAraPE_titleStmt,
      OpenAraPE_editionStmt?,
      OpenAraPE_publicationStmt,
      OpenAraPE_seriesStmt?,
      OpenAraPE_notesStmt?),
     OpenAraPE_sourceDesc*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.declarable.attributes,
    OpenAraPE_att.sortable.attributes,
    OpenAraPE_att.docStatus.attributes,
    empty
  }
OpenAraPE_encodingDesc =
  
  ## (encoding description) documents the relationship between an electronic text and the source or sources from which it was derived. [2.3. The Encoding Description 2.1.1. The TEI Header and Its Components]
  element encodingDesc {
    (OpenAraPE_model.encodingDescPart | OpenAraPE_model.pLike)+,
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_projectDesc =
  
  ## (project description) describes in detail the aim or purpose for which an electronic file was encoded, together with any other relevant information concerning the process by which it was assembled or collected. [2.3.1. The Project Description 2.3. The Encoding Description 15.3.2. Declarable Elements]
  element projectDesc {
    OpenAraPE_model.pLike+,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.declarable.attributes,
    empty
  }
OpenAraPE_samplingDecl =
  
  ## (sampling declaration) contains a prose description of the rationale and methods used in sampling texts in the creation of a corpus or collection. [2.3.2. The Sampling Declaration 2.3. The Encoding Description 15.3.2. Declarable Elements]
  element samplingDecl {
    OpenAraPE_model.pLike+,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.declarable.attributes,
    empty
  }
OpenAraPE_editorialDecl =
  
  ## (editorial practice declaration) provides details of editorial principles and practices applied during the encoding of a text. [2.3.3. The Editorial Practices Declaration 2.3. The Encoding Description 15.3.2. Declarable Elements]
  element editorialDecl {
    (OpenAraPE_model.pLike | OpenAraPE_model.editorialDeclPart)+,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.declarable.attributes,
    empty
  }
OpenAraPE_correction =
  
  ## (correction principles) states how and under what circumstances corrections have been made in the text. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element correction {
    OpenAraPE_model.pLike+,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.declarable.attributes,
    
    ## indicates the degree of correction applied to the text.
    [ a:defaultValue = "unknown" ]
    attribute status {
      
      ## the text has been thoroughly checked and proofread.
      "high"
      | 
        ## the text has been checked at least once.
        "medium"
      | 
        ## the text has not been checked.
        "low"
      | 
        ## the correction status of the text is unknown.
        "unknown"
    }?,
    
    ## indicates the method adopted to indicate corrections within the text.
    [ a:defaultValue = "silent" ]
    attribute method {
      
      ## corrections have been made silently
      "silent"
      | 
        ## corrections have been represented using markup
        "markup"
    }?,
    empty
  }
OpenAraPE_quotation =
  
  ## specifies editorial practice adopted with respect to quotation marks in the original. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element quotation {
    (OpenAraPE_model.pLike*)
    >> sch:pattern [
         id = "tei_OpenAraPE-quotation-quotationContents-constraint-11"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:quotation"
           "\x{a}" ~
           "               "
           sch:report [
             test = "not(@marks) and not (tei:p)"
             "\x{a}" ~
             "On "
             sch:name [ ]
             ", either the @marks attribute should be used, or a paragraph of description provided"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.declarable.attributes,
    
    ## (quotation marks) indicates whether or not quotation marks have been retained as content within the text.
    attribute marks {
      
      ## no quotation marks have been retained
      "none"
      | 
        ## some quotation marks have been retained
        "some"
      | 
        ## all quotation marks have been retained
        "all"
    }?,
    empty
  }
OpenAraPE_hyphenation =
  
  ## summarizes the way in which hyphenation in a source text has been treated in an encoded version of it. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element hyphenation {
    OpenAraPE_model.pLike+,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.declarable.attributes,
    
    ## (end-of-line) indicates whether or not end-of-line hyphenation has been retained in a text.
    [ a:defaultValue = "some" ]
    attribute eol {
      
      ## all end-of-line hyphenation has been retained, even though the lineation of the original may not have been.
      "all"
      | 
        ## end-of-line hyphenation has been retained in some cases.
        "some"
      | 
        ## all soft end-of-line hyphenation has been removed: any remaining end-of-line hyphenation should be retained.
        "hard"
      | 
        ## all end-of-line hyphenation has been removed: any remaining hyphenation occurred within the line.
        "none"
    }?,
    empty
  }
OpenAraPE_segmentation =
  
  ## describes the principles according to which the text has been segmented, for example into sentences, tone-units, graphemic strata, etc. [2.3.3. The Editorial Practices Declaration 15.3.2. Declarable Elements]
  element segmentation {
    OpenAraPE_model.pLike+,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.declarable.attributes,
    empty
  }
OpenAraPE_punctuation =
  
  ## specifies editorial practice adopted with respect to punctuation marks in the original. [2.3.3. The Editorial Practices Declaration 3.2. Treatment of Punctuation]
  element punctuation {
    OpenAraPE_model.pLike*,
    OpenAraPE_att.declarable.attributes,
    OpenAraPE_att.global.attributes,
    
    ## indicates whether or not punctation marks have been retained as content within the text.
    attribute marks {
      
      ## no punctuation marks have been retained
      "none"
      | 
        ## some punctuation marks have been retained
        "some"
      | 
        ## all punctuation marks have been retained
        "all"
    }?,
    
    ## indicates whether punctation marks have been captured inside or outside of an adjacent element.
    attribute placement {
      
      ## punctuation marks are captured inside adjacent elements
      "internal"
      | 
        ## punctuation marks are captured outside adjacent elements
        "external"
    }?,
    empty
  }
OpenAraPE_refsDecl =
  
  ## (references declaration) specifies how canonical references are constructed for this text. [2.3.6.3. Milestone Method 2.3. The Encoding Description 2.3.6. The Reference System Declaration]
  element refsDecl {
    (OpenAraPE_model.pLike+ | OpenAraPE_refState+),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.declarable.attributes,
    empty
  }
OpenAraPE_prefixDef =
  
  ## (prefixing scheme used in data.pointer values) defines a prefixing scheme used in data.pointer values, showing how abbreviated URIs using the scheme may be expanded into full URIs. [16.2.3. Using Abbreviated Pointers]
  element prefixDef {
    OpenAraPE_model.pLike*,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.patternReplacement.attributes,
    
    ## supplies a name which functions as the prefix for an abbreviated pointing scheme such as a private URI scheme. The prefix constitutes the text preceding the first colon.
    attribute ident { xsd:Name },
    empty
  }
OpenAraPE_listPrefixDef =
  
  ## (list of prefix definitions) contains a list of definitions of prefixing schemes used in data.pointer values, showing how abbreviated URIs using each scheme may be expanded into full URIs. [16.2.3. Using Abbreviated Pointers]
  element listPrefixDef {
    (OpenAraPE_prefixDef | OpenAraPE_listPrefixDef)+,
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_refState =
  
  ## (reference state) specifies one component of a canonical reference defined by the milestone method. [2.3.6.3. Milestone Method 2.3.6. The Reference System Declaration]
  element refState {
    empty,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.milestoneUnit.attributes,
    OpenAraPE_att.edition.attributes,
    
    ## specifies the fixed length of the reference component.
    attribute length { xsd:nonNegativeInteger }?,
    
    ## (delimiter) supplies a delimiting string following the reference component.
    attribute delim { xsd:string }?,
    empty
  }
OpenAraPE_profileDesc =
  
  ## (text-profile description) provides a detailed description of non-bibliographic aspects of a text, specifically the languages and sublanguages used, the situation in which it was produced, the participants and their setting. [2.4. The Profile Description 2.1.1. The TEI Header and Its Components]
  element profileDesc {
    OpenAraPE_model.profileDescPart*,
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_langUsage =
  
  ## (language usage) describes the languages, sublanguages, registers, dialects, etc. represented within a text. [2.4.2. Language Usage 2.4. The Profile Description 15.3.2. Declarable Elements]
  element langUsage {
    (OpenAraPE_model.pLike+ | OpenAraPE_language+),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.declarable.attributes,
    empty
  }
OpenAraPE_language =
  
  ## characterizes a single language or sublanguage used within a text. [2.4.2. Language Usage]
  element language {
    OpenAraPE_macro.phraseSeq.limited,
    OpenAraPE_att.global.attributes,
    
    ## (identifier) Supplies a language code constructed as defined in BCP 47 which is used to identify the language documented by this element, and which is referenced by the global xml:lang attribute.
    attribute ident {
      xsd:language
      | (
         ##
         "")
    },
    
    ## specifies the approximate percentage (by volume) of the text which uses this language.
    attribute usage { xsd:nonNegativeInteger }?,
    empty
  }
OpenAraPE_calendarDesc =
  
  ## (calendar description) contains a description of the calendar system used in any dating expression found in the text. [2.4. The Profile Description 2.4.5. Calendar Description]
  element calendarDesc {
    OpenAraPE_calendar+, OpenAraPE_att.global.attributes, empty
  }
OpenAraPE_calendar =
  
  ## describes a calendar or dating system used in a dating formula in the text. [2.4.5. Calendar Description]
  element calendar {
    OpenAraPE_model.pLike+,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.pointing.attributes,
    empty
  }
OpenAraPE_correspDesc =
  
  ## (correspondence
  ##     description) contains a description of the actions related to one act of correspondence. [2.4.6. Correspondence Description]
  element correspDesc {
    (OpenAraPE_model.correspDescPart+ | OpenAraPE_model.pLike+),
    OpenAraPE_att.declarable.attributes,
    OpenAraPE_att.canonical.attributes,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_correspAction =
  
  ## contains a structured description of the place, the name of a person/organization and the date related to the sending/receiving of a message or any other action related to the correspondence [2.4.6. Correspondence Description]
  element correspAction {
    (OpenAraPE_model.correspActionPart+ | OpenAraPE_model.pLike+),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attribute.subtype,
    OpenAraPE_att.sortable.attributes,
    
    ## describes the nature of the action.
    ## Suggested values include: 1] sent; 2] received; 3] transmitted; 4] redirected; 5] forwarded
    attribute type {
      
      ## information concerning the sending or dispatch of a message
      "sent"
      | 
        ## information concerning the receipt of a message
        "received"
      | 
        ## information concerning the transmission of a message, i.e. between the dispatch and the next receipt, redirect or forwarding
        "transmitted"
      | 
        ## information concerning the redirection of an unread message.
        "redirected"
      | 
        ## information concerning the forwarding of a message.
        "forwarded"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenAraPE_correspContext =
  
  ## (correspondence context) provides references to preceding or following correspondence related to this piece of correspondence. [2.4.6. Correspondence Description]
  element correspContext {
    OpenAraPE_model.correspContextPart+,
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_revisionDesc =
  
  ## (revision description) summarizes the revision history for a file. [2.6. The Revision Description 2.1.1. The TEI Header and Its Components]
  element revisionDesc {
    (OpenAraPE_list | OpenAraPE_change+),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.docStatus.attributes,
    empty
  }
OpenAraPE_change =
  
  ## documents a change or set of changes made during the production of a source document, or during the revision of an electronic file. [2.6. The Revision Description 2.4.1. Creation 11.7. Identifying Changes and Revisions]
  element change {
    OpenAraPE_macro.specialPara,
    OpenAraPE_att.ascribed.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.docStatus.attributes,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    
    ## points to one or more elements that belong to this change.
    attribute target {
      list { xsd:anyURI+ }
    }?,
    empty
  }
OpenAraPE_TEI =
  
  ## (TEI document) contains a single TEI-conformant document, combining a single TEI header with one or more members of the model.resourceLike class. Multiple TEI elements may be combined to form a teiCorpus element. [4. Default Text Structure 15.1. Varieties of Composite Text]
  element TEI {
    (OpenAraPE_teiHeader, OpenAraPE_model.resourceLike+)
    >> sch:ns [ prefix = "tei" uri = "http://www.tei-c.org/ns/1.0" ]
    >> sch:ns [ prefix = "xs" uri = "http://www.w3.org/2001/XMLSchema" ]
    >> sch:ns [
         prefix = "rng"
         uri = "http://relaxng.org/ns/structure/1.0"
       ],
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    
    ## specifies the major version number of the TEI Guidelines against which this document is valid.
    attribute version {
      xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
    }?,
    empty
  }
OpenAraPE_text =
  
  ## contains a single text of any kind, whether unitary or composite, for example a poem or drama, a collection of essays, a novel, a dictionary, or a corpus sample. [4. Default Text Structure 15.1. Varieties of Composite Text]
  element text {
    (OpenAraPE_model.global*,
     (OpenAraPE_front, OpenAraPE_model.global*)?,
     (OpenAraPE_body | OpenAraPE_group),
     OpenAraPE_model.global*,
     (OpenAraPE_back, OpenAraPE_model.global*)?),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.written.attributes,
    empty
  }
OpenAraPE_body =
  
  ## (text body) contains the whole body of a single unitary text, excluding any front or back matter. [4. Default Text Structure]
  element body {
    (OpenAraPE_model.global*,
     (OpenAraPE_model.divTop,
      (OpenAraPE_model.global | OpenAraPE_model.divTop)*)?,
     (OpenAraPE_model.divGenLike,
      (OpenAraPE_model.global | OpenAraPE_model.divGenLike)*)?,
     ((OpenAraPE_model.divLike,
       (OpenAraPE_model.global | OpenAraPE_model.divGenLike)*)+
      | (OpenAraPE_model.div1Like,
         (OpenAraPE_model.global | OpenAraPE_model.divGenLike)*)+
      | ((OpenAraPE_model.common, OpenAraPE_model.global*)+,
         ((OpenAraPE_model.divLike,
           (OpenAraPE_model.global | OpenAraPE_model.divGenLike)*)+
          | (OpenAraPE_model.div1Like,
             (OpenAraPE_model.global
              | OpenAraPE_model.divGenLike)*)+)?)),
     (OpenAraPE_model.divBottom, OpenAraPE_model.global*)*),
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_group =
  
  ## contains the body of a composite text, grouping together a sequence of distinct texts (or groups of such texts) which are regarded as a unit for some purpose, for example the collected works of an author, a sequence of prose essays, etc. [4. Default Text Structure 4.3.1. Grouped Texts 15.1. Varieties of Composite Text]
  element group {
    ((OpenAraPE_model.divTop | OpenAraPE_model.global)*,
     ((OpenAraPE_text | OpenAraPE_group),
      (OpenAraPE_text | OpenAraPE_group | OpenAraPE_model.global)*),
     OpenAraPE_model.divBottom*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_floatingText =
  
  ## contains a single text of any kind, whether unitary or composite, which interrupts the text containing it at any point and after which the surrounding text resumes. [4.3.2. Floating Texts]
  element floatingText {
    (OpenAraPE_model.global*,
     (OpenAraPE_front, OpenAraPE_model.global*)?,
     (OpenAraPE_body | OpenAraPE_group),
     OpenAraPE_model.global*,
     (OpenAraPE_back, OpenAraPE_model.global*)?),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_div =
  
  ## (text division) contains a subdivision of the front, body, or back of a text. [4.1. Divisions of the Body]
  element div {
    ((OpenAraPE_model.divTop | OpenAraPE_model.global)*,
     ((((OpenAraPE_model.divLike | OpenAraPE_model.divGenLike),
        OpenAraPE_model.global*)+
       | ((OpenAraPE_model.common, OpenAraPE_model.global*)+,
          ((OpenAraPE_model.divLike | OpenAraPE_model.divGenLike),
           OpenAraPE_model.global*)*)),
      (OpenAraPE_model.divBottom, OpenAraPE_model.global*)*)?)
    >> sch:pattern [
         id =
           "tei_OpenAraPE-div-abstractModel-structure-l-constraint-12"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:div"
           "\x{a}" ~
           "               "
           sch:report [
             test = "ancestor::tei:l"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level structural elements such as div.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "tei_OpenAraPE-div-abstractModel-structure-p-constraint-13"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:div"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:p or ancestor::tei:ab and not(ancestor::tei:floatingText)"
             "\x{a}" ~
             "        Abstract model violation: p and ab may not contain higher-level structural elements such as div.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.divLike.attributes,
    OpenAraPE_att.typed.attribute.subtype,
    OpenAraPE_att.written.attributes,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Suggested values include: 1] article; 2] section; 3] volume; 4] issue; 5] bill; 6] advert; 7] letter; 8] verse
    attribute type {
      
      ## article in a periodical or of a bill
      "article"
      | 
        ## section of a newspaper issue or bill
        "section"
      | 
        ##
        "volume"
      | 
        ##
        "issue"
      | 
        ## a legal text
        "bill"
      | 
        ## an advertisement
        "advert"
      | 
        ## a letter
        "letter"
      | 
        ##
        "verse"
      | xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenAraPE_trailer =
  
  ## contains a closing title or footer appearing at the end of a division of a text. [4.2.4. Content of Textual Divisions 4.2. Elements Common to All Divisions]
  element trailer {
    (text
     | OpenAraPE_lg
     | OpenAraPE_model.gLike
     | OpenAraPE_model.phrase
     | OpenAraPE_model.inter
     | OpenAraPE_model.lLike
     | OpenAraPE_model.global)*,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_byline =
  
  ## contains the primary statement of responsibility given for a work on its title page or at the head or end of the work. [4.2.2. Openers and Closers 4.5. Front Matter]
  element byline {
    (text
     | OpenAraPE_model.gLike
     | OpenAraPE_model.phrase
     | OpenAraPE_model.global)*,
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_dateline =
  
  ## contains a brief description of the place, date, time, etc. of production of a letter, newspaper story, or other work, prefixed or suffixed to it as a kind of heading or trailer. [4.2.2. Openers and Closers]
  element dateline {
    (text
     | OpenAraPE_model.gLike
     | OpenAraPE_model.phrase
     | OpenAraPE_model.global)*,
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_epigraph =
  
  ## contains a quotation, anonymous or attributed, appearing at the start or end of a section or on a title page. [4.2.3. Arguments, Epigraphs, and Postscripts 4.2. Elements Common to All Divisions 4.6. Title Pages]
  element epigraph {
    (OpenAraPE_model.common | OpenAraPE_model.global)*,
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_opener =
  
  ## groups together dateline, byline, salutation, and similar phrases appearing as a preliminary group at the start of a division, especially of a letter. [4.2. Elements Common to All Divisions]
  element opener {
    (text
     | OpenAraPE_model.gLike
     | OpenAraPE_model.phrase
     | OpenAraPE_byline
     | OpenAraPE_dateline
     | OpenAraPE_epigraph
     | OpenAraPE_salute
     | OpenAraPE_model.global)*,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.written.attributes,
    empty
  }
OpenAraPE_closer =
  
  ## groups together salutations, datelines, and similar phrases appearing as a final group at the end of a division, especially of a letter. [4.2.2. Openers and Closers 4.2. Elements Common to All Divisions]
  element closer {
    (text
     | OpenAraPE_model.gLike
     | OpenAraPE_dateline
     | OpenAraPE_salute
     | OpenAraPE_model.phrase
     | OpenAraPE_model.global)*,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.written.attributes,
    empty
  }
OpenAraPE_salute =
  
  ## (salutation) contains a salutation or greeting prefixed to a foreword, dedicatory epistle, or other division of a text, or the salutation in the closing of a letter, preface, etc. [4.2.2. Openers and Closers]
  element salute {
    OpenAraPE_macro.paraContent,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.written.attributes,
    empty
  }
OpenAraPE_postscript =
  
  ## contains a postscript, e.g. to a letter. [4.2. Elements Common to All Divisions]
  element postscript {
    ((OpenAraPE_model.global | OpenAraPE_model.divTopPart)*,
     OpenAraPE_model.common,
     (OpenAraPE_model.global | OpenAraPE_model.common)*,
     (OpenAraPE_model.divBottomPart, OpenAraPE_model.global*)*),
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_front =
  
  ## (front matter) contains any prefatory matter (headers, abstracts, title page, prefaces, dedications, etc.) found at the start of a document, before the main body. [4.6. Title Pages 4. Default Text Structure]
  element front {
    ((OpenAraPE_model.frontPart
      | OpenAraPE_model.pLike
      | OpenAraPE_model.pLike.front
      | OpenAraPE_model.global)*,
     (((OpenAraPE_model.div1Like,
        (OpenAraPE_model.div1Like
         | OpenAraPE_model.frontPart
         | OpenAraPE_model.global)*)
       | (OpenAraPE_model.divLike,
          (OpenAraPE_model.divLike
           | OpenAraPE_model.frontPart
           | OpenAraPE_model.global)*)),
      (OpenAraPE_model.divBottom,
       (OpenAraPE_model.divBottom | OpenAraPE_model.global)*)?)?),
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_back =
  
  ## (back matter) contains any appendixes, etc. following the main part of a text. [4.7. Back Matter 4. Default Text Structure]
  element back {
    ((OpenAraPE_model.frontPart
      | OpenAraPE_model.pLike.front
      | OpenAraPE_model.pLike
      | OpenAraPE_model.listLike
      | OpenAraPE_model.global)*,
     ((OpenAraPE_model.div1Like,
       (OpenAraPE_model.frontPart
        | OpenAraPE_model.div1Like
        | OpenAraPE_model.global)*)
      | (OpenAraPE_model.divLike,
         (OpenAraPE_model.frontPart
          | OpenAraPE_model.divLike
          | OpenAraPE_model.global)*))?,
     (OpenAraPE_model.divBottomPart,
      (OpenAraPE_model.divBottomPart | OpenAraPE_model.global)*)?),
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_att =
  
  ## (attribute) contains the name of an attribute appearing within running text. [22. Documentation Elements]
  element att {
    OpenAraPE_data.name,
    OpenAraPE_att.global.attributes,
    
    ## supplies an identifier for the scheme in which this name is defined.
    ## Sample values include: 1] TEI(text encoding initiative) ; 2] DBK(docbook) ; 3] XX(unknown) ; 4] imaginary; 5] XHTML; 6] XML; 7] XI
    [ a:defaultValue = "TEI" ]
    attribute scheme {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenAraPE_code =
  
  ## contains literal code from some formal language such as a programming language. [22.1.1. Phrase Level Terms]
  element code {
    text,
    OpenAraPE_att.global.attributes,
    
    ## (formal language) a name identifying the formal language in which the code is expressed
    attribute lang {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenAraPE_gi =
  
  ## (element name) contains the name (generic identifier) of an element. [22. Documentation Elements 22.5. Element Specifications]
  element gi {
    OpenAraPE_data.name,
    OpenAraPE_att.global.attributes,
    
    ## supplies the name of the scheme in which this name is defined.
    ## Sample values include: 1] TEI; 2] DBK(docbook) ; 3] XX(unknown) ; 4] Schematron; 5] HTML
    [ a:defaultValue = "TEI" ]
    attribute scheme {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenAraPE_tag =
  
  ## contains text of a complete start- or end-tag, possibly including attribute specifications, but excluding the opening and closing markup delimiter characters. [22. Documentation Elements]
  element tag {
    text,
    OpenAraPE_att.global.attributes,
    
    ## indicates the type of XML tag intended
    attribute type {
      
      ## a start-tag, with delimiters < and > is intended
      "start"
      | 
        ## an end-tag, with delimiters </ and > is intended
        "end"
      | 
        ## a empty tag, with delimiters < and /> is intended
        "empty"
      | 
        ## a pi (processing instruction), with delimiters <? and ?> is intended
        "pi"
      | 
        ## a comment, with delimiters <!-- and --> is intended
        "comment"
      | 
        ## a marked-section, with delimiters <[CDATA[ and ]]> is intended
        "ms"
    }?,
    
    ## supplies the name of the schema in which this tag is defined.
    ## Sample values include: 1] TEI(text encoding initiative) ; 2] DBK(docbook) ; 3] XX(unknown) ; 4] Schematron; 5] HTML
    [ a:defaultValue = "TEI" ]
    attribute scheme {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenAraPE_att.datable.custom.attributes =
  OpenAraPE_att.datable.custom.attribute.when-custom,
  OpenAraPE_att.datable.custom.attribute.notBefore-custom,
  OpenAraPE_att.datable.custom.attribute.notAfter-custom,
  OpenAraPE_att.datable.custom.attribute.from-custom,
  OpenAraPE_att.datable.custom.attribute.to-custom,
  OpenAraPE_att.datable.custom.attribute.datingMethod
OpenAraPE_att.datable.custom.attribute.when-custom =
  
  ## supplies the value of a date or time in some custom standard form.
  attribute when-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
OpenAraPE_att.datable.custom.attribute.notBefore-custom =
  
  ## specifies the earliest possible date for the event in some custom standard form.
  attribute notBefore-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
OpenAraPE_att.datable.custom.attribute.notAfter-custom =
  
  ## specifies the latest possible date for the event in some custom standard form.
  attribute notAfter-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
OpenAraPE_att.datable.custom.attribute.from-custom =
  
  ## indicates the starting point of the period in some custom standard form.
  attribute from-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
OpenAraPE_att.datable.custom.attribute.to-custom =
  
  ## indicates the ending point of the period in some custom standard form.
  attribute to-custom {
    list {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
    }
  }?
OpenAraPE_att.datable.custom.attribute.datingMethod =
  
  ## supplies a pointer to a calendar element or other means of interpreting the values of the custom dating attributes.
  attribute datingMethod { xsd:anyURI }?
OpenAraPE_model.persNamePart =
  OpenAraPE_surname
  | OpenAraPE_forename
  | OpenAraPE_genName
  | OpenAraPE_nameLink
  | OpenAraPE_addName
  | OpenAraPE_roleName
OpenAraPE_model.persNamePart_alternation =
  OpenAraPE_surname
  | OpenAraPE_forename
  | OpenAraPE_genName
  | OpenAraPE_nameLink
  | OpenAraPE_addName
  | OpenAraPE_roleName
OpenAraPE_model.persNamePart_sequence =
  OpenAraPE_surname,
  OpenAraPE_forename,
  OpenAraPE_genName,
  OpenAraPE_nameLink,
  OpenAraPE_addName,
  OpenAraPE_roleName
OpenAraPE_model.persNamePart_sequenceOptional =
  OpenAraPE_surname?,
  OpenAraPE_forename?,
  OpenAraPE_genName?,
  OpenAraPE_nameLink?,
  OpenAraPE_addName?,
  OpenAraPE_roleName?
OpenAraPE_model.persNamePart_sequenceOptionalRepeatable =
  OpenAraPE_surname*,
  OpenAraPE_forename*,
  OpenAraPE_genName*,
  OpenAraPE_nameLink*,
  OpenAraPE_addName*,
  OpenAraPE_roleName*
OpenAraPE_model.persNamePart_sequenceRepeatable =
  OpenAraPE_surname+,
  OpenAraPE_forename+,
  OpenAraPE_genName+,
  OpenAraPE_nameLink+,
  OpenAraPE_addName+,
  OpenAraPE_roleName+
OpenAraPE_att.datable.iso.attributes =
  OpenAraPE_att.datable.iso.attribute.when-iso,
  OpenAraPE_att.datable.iso.attribute.notBefore-iso,
  OpenAraPE_att.datable.iso.attribute.notAfter-iso,
  OpenAraPE_att.datable.iso.attribute.from-iso,
  OpenAraPE_att.datable.iso.attribute.to-iso
OpenAraPE_att.datable.iso.attribute.when-iso =
  
  ## supplies the value of a date or time in a standard form.
  attribute when-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
OpenAraPE_att.datable.iso.attribute.notBefore-iso =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
OpenAraPE_att.datable.iso.attribute.notAfter-iso =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
OpenAraPE_att.datable.iso.attribute.from-iso =
  
  ## indicates the starting point of the period in standard form.
  attribute from-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
OpenAraPE_att.datable.iso.attribute.to-iso =
  
  ## indicates the ending point of the period in standard form.
  attribute to-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
OpenAraPE_orgName =
  
  ## (organization name) contains an organizational name. [13.2.2. Organizational Names]
  element orgName {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.personal.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_persName =
  
  ## (personal name) contains a proper noun or proper-noun phrase referring to a person, possibly including one or more of the person's forenames, surnames, honorifics, added names, etc. [13.2.1. Personal Names]
  element persName {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.personal.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_surname =
  
  ## contains a family (inherited) name, as opposed to a given, baptismal, or nick name. [13.2.1. Personal Names]
  element surname {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.personal.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_forename =
  
  ## contains a forename, given or baptismal name. [13.2.1. Personal Names]
  element forename {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.personal.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_genName =
  
  ## (generational name component) contains a name component used to distinguish otherwise similar names on the basis of the relative ages or generations of the persons named. [13.2.1. Personal Names]
  element genName {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.personal.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_nameLink =
  
  ## (name link) contains a connecting phrase or link used within a name but not regarded as part of it, such as van der or of. [13.2.1. Personal Names]
  element nameLink {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_addName =
  
  ## (additional name) contains an additional name component, such as a nickname, epithet, or alias, or any other descriptive phrase used within a personal name. [13.2.1. Personal Names]
  element addName {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.personal.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_roleName =
  
  ## contains a name component which indicates that the referent has a particular role or position in society, such as an official title or rank. [13.2.1. Personal Names]
  element roleName {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.personal.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_placeName =
  
  ## contains an absolute or relative place name. [13.2.3. Place Names]
  element placeName {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.personal.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_bloc =
  
  ## contains the name of a geo-political unit consisting of two or more nation states or countries. [13.2.3. Place Names]
  element bloc {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.naming.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.datable.attributes,
    empty
  }
OpenAraPE_country =
  
  ## contains the name of a geo-political unit, such as a nation, country, colony, or commonwealth, larger than or administratively superior to a region and smaller than a bloc. [13.2.3. Place Names]
  element country {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.naming.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.datable.attributes,
    empty
  }
OpenAraPE_region =
  
  ## contains the name of an administrative unit such as a state, province, or county, larger than a settlement, but smaller than a country. [13.2.3. Place Names]
  element region {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.naming.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.datable.attributes,
    empty
  }
OpenAraPE_district =
  
  ## contains the name of any kind of subdivision of a settlement, such as a parish, ward, or other administrative or geographic unit. [13.2.3. Place Names]
  element district {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.naming.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.datable.attributes,
    empty
  }
OpenAraPE_settlement =
  
  ## contains the name of a settlement such as a city, town, or village identified as a single geo-political or administrative unit. [13.2.3. Place Names]
  element settlement {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.naming.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.datable.attributes,
    empty
  }
OpenAraPE_offset =
  
  ## marks that part of a relative temporal or spatial expression which indicates the direction of the offset between the two place names, dates, or times involved in the expression. [13.2.3. Place Names]
  element offset {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.naming.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_geogName =
  
  ## (geographical name) identifies a name associated with some geographical feature such as Windrush Valley or Mount Sinai. [13.2.3. Place Names]
  element geogName {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.naming.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_geogFeat =
  
  ## (geographical feature name) contains a common noun identifying some geographical feature contained within a geographic name, such as valley, mount, etc. [13.2.3. Place Names]
  element geogFeat {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.naming.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_affiliation =
  
  ## contains an informal description of a person's present or past affiliation with some organization, for example an employer or sponsor. [15.2.2. The Participant Description]
  element affiliation {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.naming.attributes,
    empty
  }
OpenAraPE_age =
  
  ## specifies the age of a person. [13.3.2.1. Personal Characteristics]
  element age {
    OpenAraPE_macro.phraseSeq.limited,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    
    ## supplies a numeric code representing the age or age group
    attribute value { xsd:nonNegativeInteger }?,
    empty
  }
OpenAraPE_birth =
  
  ## contains information about a person's birth, such as its date and place. [15.2.2. The Participant Description]
  element birth {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.naming.attributes,
    empty
  }
OpenAraPE_climate =
  
  ## contains information about the physical climate of a place. [13.3.4.3. States, Traits, and Events]
  element climate {
    (OpenAraPE_model.headLike*,
     (OpenAraPE_model.pLike+ | OpenAraPE_model.labelLike+),
     (OpenAraPE_model.noteLike | OpenAraPE_model.biblLike)*,
     OpenAraPE_climate*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.naming.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_death =
  
  ## contains information about a person's death, such as its date and place. [15.2.2. The Participant Description]
  element death {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.naming.attributes,
    empty
  }
OpenAraPE_education =
  
  ## contains a description of the educational experience of a person. [15.2.2. The Participant Description]
  element education {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.naming.attributes,
    empty
  }
OpenAraPE_event =
  
  ## contains data relating to any kind of significant event associated with a person, place, or organization. [13.3.1. Basic Principles]
  element event {
    (OpenAraPE_model.headLike*,
     (OpenAraPE_model.pLike+ | OpenAraPE_model.labelLike+),
     (OpenAraPE_model.noteLike | OpenAraPE_model.biblLike)*,
     OpenAraPE_event*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.naming.attributes,
    OpenAraPE_att.sortable.attributes,
    
    ## indicates the location of an event by pointing to a place element
    attribute where { xsd:anyURI }?,
    empty
  }
OpenAraPE_faith =
  
  ## specifies the faith, religion, or belief set of a person. [13.3.2.1. Personal Characteristics]
  element faith {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.canonical.attributes,
    empty
  }
OpenAraPE_floruit =
  
  ## contains information about a person's period of activity. [13.3.2.1. Personal Characteristics]
  element floruit {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    empty
  }
OpenAraPE_geo =
  
  ## (geographical coordinates) contains any expression of a set of geographic coordinates, representing a point, line, or area on the surface of the earth in some notation. [13.3.4.1. Varieties of Location]
  element geo { text, OpenAraPE_att.global.attributes, empty }
OpenAraPE_listOrg =
  
  ## (list of organizations) contains a list of elements, each of which provides information about an identifiable organization. [13.2.2. Organizational Names]
  element listOrg {
    (OpenAraPE_model.headLike*,
     (OpenAraPE_org | OpenAraPE_listOrg)+,
     (OpenAraPE_relation | OpenAraPE_listRelation)*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.declarable.attributes,
    OpenAraPE_att.sortable.attributes,
    empty
  }
OpenAraPE_listEvent =
  
  ## (list of events) contains a list of descriptions, each of which provides information about an identifiable event. [13.3.1. Basic Principles]
  element listEvent {
    (OpenAraPE_model.headLike*,
     (OpenAraPE_event | OpenAraPE_listEvent)+,
     (OpenAraPE_relation | OpenAraPE_listRelation)*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.declarable.attributes,
    OpenAraPE_att.sortable.attributes,
    empty
  }
OpenAraPE_listPerson =
  
  ## (list of persons) contains a list of descriptions, each of which provides information about an identifiable person or a group of people, for example the participants in a language interaction, or the people referred to in a historical source. [13.3.2. The Person Element 15.2. Contextual Information 2.4. The Profile Description 15.3.2. Declarable Elements]
  element listPerson {
    (OpenAraPE_model.headLike*,
     (OpenAraPE_model.personLike | OpenAraPE_listPerson)+,
     (OpenAraPE_relation | OpenAraPE_listRelation)*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.declarable.attributes,
    OpenAraPE_att.sortable.attributes,
    empty
  }
OpenAraPE_listPlace =
  
  ## (list of places) contains a list of places, optionally followed by a list of relationships (other than containment) defined amongst them. [2.2.7. The Source Description 13.3.4. Places]
  element listPlace {
    (OpenAraPE_model.headLike*,
     (OpenAraPE_model.placeLike | OpenAraPE_listPlace)+,
     (OpenAraPE_relation | OpenAraPE_listRelation)*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.declarable.attributes,
    OpenAraPE_att.sortable.attributes,
    empty
  }
OpenAraPE_location =
  
  ## defines the location of a place as a set of geographical coordinates, in terms of other named geo-political entities, or as an address. [13.3.4. Places]
  element location {
    (OpenAraPE_model.labelLike
     | OpenAraPE_model.placeNamePart
     | OpenAraPE_model.offsetLike
     | OpenAraPE_model.measureLike
     | OpenAraPE_model.addressLike
     | OpenAraPE_model.noteLike
     | OpenAraPE_model.biblLike)*,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.datable.attributes,
    empty
  }
OpenAraPE_nationality =
  
  ## contains an informal description of a person's present or past nationality or citizenship. [15.2.2. The Participant Description]
  element nationality {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.naming.attributes,
    empty
  }
OpenAraPE_occupation =
  
  ## contains an informal description of a person's trade, profession or occupation. [15.2.2. The Participant Description]
  element occupation {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.naming.attributes,
    
    ## indicates the classification system or taxonomy in use, for example by supplying the identifier of a taxonomy element, or pointing to some other resource.
    attribute scheme { xsd:anyURI }?,
    
    ## identifies an occupation code defined within the classification system or taxonomy defined by the scheme attribute.
    attribute code { xsd:anyURI }?,
    empty
  }
OpenAraPE_org =
  
  ## (organization) provides information about an identifiable organization such as a business, a tribe, or any other grouping of people. [13.2.2. Organizational Names]
  element org {
    (OpenAraPE_model.headLike*,
     (OpenAraPE_model.pLike*
      | (OpenAraPE_model.labelLike
         | OpenAraPE_model.nameLike
         | OpenAraPE_model.placeLike
         | OpenAraPE_model.orgPart
         | OpenAraPE_model.milestoneLike)*),
     (OpenAraPE_model.noteLike | OpenAraPE_model.biblLike)*,
     OpenAraPE_model.personLike*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.sortable.attributes,
    
    ## specifies a primary role or classification for the organization.
    attribute role {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    empty
  }
OpenAraPE_listRelation =
  
  ## provides information about relationships identified amongst people, places, and organizations, either informally as prose or as formally expressed relation links. [13.3.2.3. Personal Relationships]
  element listRelation {
    (OpenAraPE_model.headLike*,
     (OpenAraPE_model.pLike
      | (OpenAraPE_relation | OpenAraPE_listRelation)+)),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.sortable.attributes,
    empty
  }
OpenAraPE_person =
  
  ## provides information about an identifiable individual, for example a participant in a language interaction, or a person referred to in a historical source. [13.3.2. The Person Element 15.2.2. The Participant Description]
  element person {
    (OpenAraPE_model.pLike+
     | (OpenAraPE_model.personPart | OpenAraPE_model.global)*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.sortable.attributes,
    
    ## specifies a primary role or classification for the person.
    attribute role {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    
    ## specifies the sex of the person.
    attribute sex {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    
    ## specifies an age group for the person.
    attribute age {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenAraPE_personGrp =
  
  ## (personal group) describes a group of individuals treated as a single person for analytic purposes. [15.2.2. The Participant Description]
  element personGrp {
    (OpenAraPE_model.pLike+
     | (OpenAraPE_model.personPart | OpenAraPE_model.global)*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.sortable.attributes,
    
    ## specifies the role of this group of participants in the interaction.
    attribute role {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## specifies the sex of the participant group.
    attribute sex {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    
    ## specifies the age group of the participants.
    attribute age {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## describes informally the size or approximate size of the group for example by means of a number and an indication of accuracy e.g. approx 200.
    attribute size {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    empty
  }
OpenAraPE_place =
  
  ## contains data about a geographic location [13.3.4. Places]
  element place {
    (OpenAraPE_model.headLike*,
     (OpenAraPE_model.pLike*
      | (OpenAraPE_model.labelLike
         | OpenAraPE_model.placeStateLike
         | OpenAraPE_model.eventLike)*),
     (OpenAraPE_model.noteLike
      | OpenAraPE_model.biblLike
      | OpenAraPE_idno)*,
     (OpenAraPE_model.placeLike | OpenAraPE_listPlace)*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.sortable.attributes,
    empty
  }
OpenAraPE_population =
  
  ## contains information about the population of a place. [13.3.4.3. States, Traits, and Events]
  element population {
    (OpenAraPE_model.headLike*,
     ((OpenAraPE_model.pLike+ | OpenAraPE_model.labelLike+),
      (OpenAraPE_model.noteLike | OpenAraPE_model.biblLike)*)?,
     OpenAraPE_population*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.naming.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_relation =
  
  ## (relationship) describes any kind of relationship or linkage amongst a specified group of places, events, persons, objects or other items. [13.3.2.3. Personal Relationships]
  [
    sch:pattern [
      id = "tei_OpenAraPE-relation-reforkeyorname-constraint-9"
      "\x{a}" ~
      "            "
      sch:rule [
        context = "tei:relation"
        "\x{a}" ~
        "               "
        sch:assert [
          test = "@ref or @key or @name"
          "One of the attributes  'name', 'ref' or 'key' must be supplied"
        ]
        "\x{a}" ~
        "            "
      ]
      "\x{a}" ~
      "         "
    ]
    sch:pattern [
      id = "tei_OpenAraPE-relation-activemutual-constraint-14"
      "\x{a}" ~
      "            "
      sch:rule [
        context = "tei:relation"
        "\x{a}" ~
        "               "
        sch:report [
          test = "@active and @mutual"
          "Only one of the attributes\x{a}" ~
          "@active and @mutual may be supplied"
        ]
        "\x{a}" ~
        "            "
      ]
      "\x{a}" ~
      "         "
    ]
    sch:pattern [
      id = "tei_OpenAraPE-relation-activepassive-constraint-15"
      "\x{a}" ~
      "            "
      sch:rule [
        context = "tei:relation"
        "\x{a}" ~
        "               "
        sch:report [
          test = "@passive and not(@active)"
          "the attribute 'passive'\x{a}" ~
          "	may be supplied only if the attribute 'active' is\x{a}" ~
          "	supplied"
        ]
        "\x{a}" ~
        "            "
      ]
      "\x{a}" ~
      "         "
    ]
  ]
  element relation {
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.canonical.attributes,
    OpenAraPE_att.sortable.attributes,
    OpenAraPE_att.typed.attributes,
    
    ## supplies a name for the kind of relationship of which this is an instance.
    attribute name {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    (
     ## identifies the active participants in a non-mutual relationship, or all the participants in a mutual one.
     attribute active {
       list { xsd:anyURI+ }
     }?
     | 
       ## supplies a list of participants amongst all of whom the relationship holds equally.
       attribute mutual {
         list { xsd:anyURI+ }
       }?),
    
    ## identifies the passive participants in a non-mutual relationship.
    attribute passive {
      list { xsd:anyURI+ }
    }?,
    empty
  }
OpenAraPE_residence =
  
  ## describes a person's present or past places of residence. [15.2.2. The Participant Description]
  element residence {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.naming.attributes,
    empty
  }
OpenAraPE_sex =
  
  ## specifies the sex of a person. [13.3.2.1. Personal Characteristics]
  element sex {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    
    ## supplies a coded value for sex
    attribute value {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    empty
  }
OpenAraPE_socecStatus =
  
  ## (socio-economic status) contains an informal description of a person's perceived social or economic status. [15.2.2. The Participant Description]
  element socecStatus {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.naming.attributes,
    
    ## identifies the classification system or taxonomy in use, for example by pointing to a locally-defined taxonomy element or by supplying a URI for an externally-defined system.
    attribute scheme { xsd:anyURI }?,
    
    ## identifies a status code defined within the classification system or taxonomy defined by the scheme attribute.
    attribute code { xsd:anyURI }?,
    empty
  }
OpenAraPE_state =
  
  ## contains a description of some status or quality attributed to a person, place, or organization often at some specific time or for a specific date range. [13.3.1. Basic Principles 13.3.2.1. Personal Characteristics]
  element state {
    (OpenAraPE_state+
     | (OpenAraPE_model.headLike*,
        OpenAraPE_model.pLike+,
        (OpenAraPE_model.noteLike | OpenAraPE_model.biblLike)*)
     | (OpenAraPE_model.labelLike
        | OpenAraPE_model.noteLike
        | OpenAraPE_model.biblLike)*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.naming.attributes,
    empty
  }
OpenAraPE_terrain =
  
  ## contains information about the physical terrain of a place. [13.3.4.3. States, Traits, and Events]
  element terrain {
    (OpenAraPE_model.headLike*,
     (OpenAraPE_model.pLike+ | OpenAraPE_model.labelLike+),
     (OpenAraPE_model.noteLike | OpenAraPE_model.biblLike)*,
     OpenAraPE_terrain*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.naming.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_trait =
  
  ## contains a description of some status or quality attributed to a person, place, or organization typically, but not necessarily, independent of the volition or action of the holder and usually not at some specific time or for a specific date range. [13.3.1. Basic Principles 13.3.2.1. Personal Characteristics]
  element trait {
    (OpenAraPE_trait+
     | (OpenAraPE_model.headLike*,
        OpenAraPE_model.pLike+,
        (OpenAraPE_model.noteLike | OpenAraPE_model.biblLike)*)
     | (OpenAraPE_model.labelLike
        | OpenAraPE_model.noteLike
        | OpenAraPE_model.biblLike)*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.datable.attributes,
    OpenAraPE_att.naming.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_nym =
  
  ## (canonical name) contains the definition for a canonical name or name component of any kind. [13.3.5. Names and Nyms]
  element nym {
    (OpenAraPE_model.entryPart*,
     OpenAraPE_model.pLike*,
     OpenAraPE_nym*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.sortable.attributes,
    
    ## points to constituent nyms
    attribute parts {
      list { xsd:anyURI+ }
    }?,
    empty
  }
OpenAraPE_listNym =
  
  ## (list of canonical names) contains a list of nyms, that is, standardized names for any thing. [13.3.5. Names and Nyms]
  element listNym {
    (OpenAraPE_model.headLike*,
     (OpenAraPE_nym | OpenAraPE_listNym)+,
     (OpenAraPE_relation | OpenAraPE_listRelation)*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.declarable.attributes,
    OpenAraPE_att.sortable.attributes,
    empty
  }
OpenAraPE_att.global.linking.attributes =
  OpenAraPE_att.global.linking.attribute.corresp,
  OpenAraPE_att.global.linking.attribute.next,
  OpenAraPE_att.global.linking.attribute.prev
OpenAraPE_att.global.linking.attribute.corresp =
  
  ## (corresponds) points to elements that correspond to the current element in some way.
  attribute corresp {
    list { xsd:anyURI+ }
  }?
OpenAraPE_att.global.linking.attribute.next =
  
  ## points to the next element of a virtual aggregate of which the current element is part.
  attribute next { xsd:anyURI }?
OpenAraPE_att.global.linking.attribute.prev =
  
  ## (previous) points to the previous element of a virtual aggregate of which the current element is part.
  attribute prev { xsd:anyURI }?
OpenAraPE_ab =
  
  ## (anonymous block) contains any arbitrary component-level unit of text, acting as an anonymous container for phrase or inter level elements analogous to, but without the semantic baggage of, a paragraph. [16.3. Blocks, Segments, and Anchors]
  element ab {
    OpenAraPE_macro.paraContent
    >> sch:pattern [
         id = "tei_OpenAraPE-ab-abstractModel-structure-p-constraint-16"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ab"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:p or ancestor::tei:ab)          and not(parent::tei:exemplum         |parent::tei:item         |parent::tei:note         |parent::tei:q         |parent::tei:quote         |parent::tei:remarks         |parent::tei:said         |parent::tei:sp         |parent::tei:stage         |parent::tei:cell         |parent::tei:figure)"
             "\x{a}" ~
             "        Abstract model violation: ab may not contain paragraphs or other ab elements.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "tei_OpenAraPE-ab-abstractModel-structure-l-constraint-17"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ab"
           "\x{a}" ~
           "               "
           sch:report [
             test = "ancestor::tei:l or ancestor::tei:lg"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level divisions such as p or ab.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.fragmentable.attributes,
    OpenAraPE_att.written.attributes,
    empty
  }
OpenAraPE_seg =
  
  ## (arbitrary segment) represents any segmentation of text below the chunk level. [16.3. Blocks, Segments, and Anchors 6.2. Components of the Verse Line 7.2.5. Speech Contents]
  element seg {
    OpenAraPE_macro.paraContent,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.segLike.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.source.attributes,
    OpenAraPE_att.written.attributes,
    empty
  }
OpenAraPE_table =
  
  ## contains text displayed in tabular form, in rows and columns. [14.1.1. TEI Tables]
  element table {
    ((OpenAraPE_model.headLike | OpenAraPE_model.global)*,
     ((OpenAraPE_row, OpenAraPE_model.global*)+
      | (OpenAraPE_model.graphicLike, OpenAraPE_model.global*)+),
     (OpenAraPE_model.divBottom, OpenAraPE_model.global*)*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    
    ## indicates the number of rows in the table.
    attribute rows { xsd:nonNegativeInteger }?,
    
    ## (columns) indicates the number of columns in each row of the table.
    attribute cols { xsd:nonNegativeInteger }?,
    empty
  }
OpenAraPE_row =
  
  ## contains one row of a table. [14.1.1. TEI Tables]
  element row {
    OpenAraPE_cell+,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.tableDecoration.attributes,
    empty
  }
OpenAraPE_cell =
  
  ## contains one cell of a table. [14.1.1. TEI Tables]
  element cell {
    OpenAraPE_macro.specialPara,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.tableDecoration.attributes,
    empty
  }
OpenAraPE_figure =
  
  ## groups elements representing or containing graphic information such as an illustration, formula, or figure. [14.4. Specific Elements for Graphic Images]
  element figure {
    (OpenAraPE_model.headLike
     | OpenAraPE_model.common
     | OpenAraPE_figDesc
     | OpenAraPE_model.graphicLike
     | OpenAraPE_model.global
     | OpenAraPE_model.divBottom)*,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.placement.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_figDesc =
  
  ## (description of figure) contains a brief prose description of the appearance or content of a graphic figure, for use when documenting an image without displaying it. [14.4. Specific Elements for Graphic Images]
  element figDesc {
    OpenAraPE_macro.limitedContent,
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_att.global.facs.attributes =
  OpenAraPE_att.global.facs.attribute.facs
OpenAraPE_att.global.facs.attribute.facs =
  
  ## (facsimile) points to all or part of an image which corresponds with the content of the element.
  attribute facs {
    list { xsd:anyURI+ }
  }?
OpenAraPE_att.coordinated.attributes =
  OpenAraPE_att.coordinated.attribute.start,
  OpenAraPE_att.coordinated.attribute.ulx,
  OpenAraPE_att.coordinated.attribute.uly,
  OpenAraPE_att.coordinated.attribute.lrx,
  OpenAraPE_att.coordinated.attribute.lry,
  OpenAraPE_att.coordinated.attribute.points
OpenAraPE_att.coordinated.attribute.start =
  
  ## indicates the element within a transcription of the text containing at least the start of the writing represented by this zone or surface.
  attribute start { xsd:anyURI }?
OpenAraPE_att.coordinated.attribute.ulx =
  
  ## gives the x coordinate value for the upper left corner of a rectangular space.
  attribute ulx {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
OpenAraPE_att.coordinated.attribute.uly =
  
  ## gives the y coordinate value for the upper left corner of a rectangular space.
  attribute uly {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
OpenAraPE_att.coordinated.attribute.lrx =
  
  ## gives the x coordinate value for the lower right corner of a rectangular space.
  attribute lrx {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
OpenAraPE_att.coordinated.attribute.lry =
  
  ## gives the y coordinate value for the lower right corner of a rectangular space.
  attribute lry {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
OpenAraPE_att.coordinated.attribute.points =
  
  ## identifies a two dimensional area within the bounding box specified by the other attributes by means of a series of pairs of numbers, each of which gives the x,y coordinates of a point on a line enclosing the area.
  attribute points {
    list {
      xsd:token { pattern = "(\-?[0-9]+\.?[0-9]*,\-?[0-9]+\.?[0-9]*)" },
      xsd:token { pattern = "(\-?[0-9]+\.?[0-9]*,\-?[0-9]+\.?[0-9]*)" },
      xsd:token { pattern = "(\-?[0-9]+\.?[0-9]*,\-?[0-9]+\.?[0-9]*)" },
      xsd:token { pattern = "(\-?[0-9]+\.?[0-9]*,\-?[0-9]+\.?[0-9]*)" }*
    }
  }?
OpenAraPE_facsimile =
  
  ## contains a representation of some written source in the form of a set of images rather than as transcribed or encoded text. [11.1. Digital Facsimiles]
  element facsimile {
    (OpenAraPE_front?,
     (OpenAraPE_model.graphicLike
      | OpenAraPE_surface
      | OpenAraPE_surfaceGrp)+,
     OpenAraPE_back?),
    OpenAraPE_att.global.attributes,
    empty
  }
OpenAraPE_surface =
  
  ## defines a written surface as a two-dimensional coordinate space, optionally grouping one or more graphic representations of that space, zones of interest within that space, and transcriptions of the writing within them. [11.1. Digital Facsimiles 11.2.2. Embedded Transcription]
  element surface {
    ((OpenAraPE_model.global
      | OpenAraPE_model.labelLike
      | OpenAraPE_model.graphicLike)*,
     ((OpenAraPE_zone | OpenAraPE_surface | OpenAraPE_surfaceGrp),
      OpenAraPE_model.global*)*),
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.coordinated.attributes,
    OpenAraPE_att.typed.attributes,
    
    ## describes the method by which this surface is or was connected to the main surface
    ## Sample values include: 1] glued; 2] pinned; 3] sewn
    attribute attachment {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## indicates whether the surface is attached and folded in such a way as to provide two writing surfaces
    attribute flipping { xsd:boolean }?,
    empty
  }
OpenAraPE_surfaceGrp =
  
  ## defines any kind of useful grouping of written surfaces, for example the recto and verso of a single leaf, which the encoder wishes to treat as a single unit. [11.1. Digital Facsimiles]
  element surfaceGrp {
    (OpenAraPE_model.global
     | OpenAraPE_surface
     | OpenAraPE_surfaceGrp)+,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_zone =
  
  ## defines any two-dimensional area within a surface element. [11.1. Digital Facsimiles 11.2.2. Embedded Transcription]
  element zone {
    (text
     | OpenAraPE_model.graphicLike
     | OpenAraPE_model.global
     | OpenAraPE_surface
     | OpenAraPE_model.linePart)*,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.coordinated.attributes,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.written.attributes,
    
    ## indicates the amount by which this zone has been rotated clockwise, with respect to the normal orientation of the parent surface element as implied by the dimensions given in the msDesc element or by the coordinates of the surface itself. The orientation is expressed in arc degrees.
    [ a:defaultValue = "0" ]
    attribute rotate { xsd:nonNegativeInteger }?,
    empty
  }
OpenAraPE_ex =
  
  ## (editorial expansion) contains a sequence of letters added by an editor or transcriber when expanding an abbreviation. [11.3.1.2. Abbreviation and Expansion]
  element ex {
    OpenAraPE_macro.xtext, OpenAraPE_att.global.attributes, empty
  }
OpenAraPE_fw =
  
  ## (forme work) contains a running head (e.g. a header, footer), catchword, or similar material appearing on the current page. [11.6. Headers, Footers, and Similar Matter]
  element fw {
    OpenAraPE_macro.phraseSeq,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.placement.attributes,
    OpenAraPE_att.written.attributes,
    
    ## classifies the material encoded according to some useful typology.
    ## Sample values include: 1] header; 2] footer; 3] pageNum(page number) ; 4] lineNum(line number) ; 5] sig(signature) ; 6] catch(catchword) 
    attribute type {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    empty
  }
OpenAraPE_am =
  
  ## (abbreviation marker) contains a sequence of letters or signs present in an abbreviation which are omitted or replaced in the expanded form of the abbreviation. [11.3.1.2. Abbreviation and Expansion]
  element am {
    (text
     | OpenAraPE_model.gLike
     | OpenAraPE_model.pPart.transcriptional)*,
    OpenAraPE_att.global.attributes,
    OpenAraPE_att.typed.attributes,
    empty
  }
OpenAraPE_space =
  
  ## indicates the location of a significant space in the text. [11.5.1. Space]
  element space {
    (OpenAraPE_model.descLike | OpenAraPE_model.certLike)*,
    OpenAraPE_att.global.attribute.xmlid,
    OpenAraPE_att.global.attribute.n,
    OpenAraPE_att.global.attribute.xmllang,
    OpenAraPE_att.global.rendition.attribute.rend,
    OpenAraPE_att.global.rendition.attribute.style,
    OpenAraPE_att.global.rendition.attribute.rendition,
    OpenAraPE_att.global.linking.attribute.corresp,
    OpenAraPE_att.global.linking.attribute.next,
    OpenAraPE_att.global.linking.attribute.prev,
    OpenAraPE_att.global.facs.attribute.facs,
    OpenAraPE_att.typed.attributes,
    OpenAraPE_att.dimensions.attributes,
    OpenAraPE_att.source.attributes,
    
    ## (responsible party) (responsible party) indicates the individual responsible for identifying and measuring the space
    attribute resp {
      list { xsd:anyURI+ }
    }?,
    
    ## (dimension) indicates whether the space is horizontal or vertical.
    attribute dim {
      
      ## the space is horizontal.
      "horizontal"
      | 
        ## the space is vertical.
        "vertical"
    }?,
    empty
  }
OpenAraPE_supplied =
  
  ## signifies text supplied by the transcriber or editor for any reason; for example because the original cannot be read due to physical damage, or because of an obvious omission by the author or scribe. [11.3.3.1. Damage, Illegibility, and Supplied Text]
  element supplied {
    OpenAraPE_macro.paraContent,
    OpenAraPE_att.global.attribute.xmlid,
    OpenAraPE_att.global.attribute.n,
    OpenAraPE_att.global.attribute.xmllang,
    OpenAraPE_att.global.rendition.attribute.rend,
    OpenAraPE_att.global.rendition.attribute.style,
    OpenAraPE_att.global.rendition.attribute.rendition,
    OpenAraPE_att.global.linking.attribute.corresp,
    OpenAraPE_att.global.linking.attribute.next,
    OpenAraPE_att.global.linking.attribute.prev,
    OpenAraPE_att.global.facs.attribute.facs,
    
    ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
    attribute resp {
      list { xsd:anyURI+ }
    },
    
    ## one or more words indicating why the text has had to be supplied, e.g. overbinding, faded-ink, lost-folio, omitted-in-original.
    attribute reason {
      list {
        xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }+
      }
    }?,
    empty
  }
OpenAraPE_metamark =
  
  ## contains or describes any kind of graphic or written signal within a document the function of which is to determine how it should be read rather than forming part of the actual content of the document. [11.3.4.2. Metamarks]
  element metamark {
    OpenAraPE_macro.specialPara,
    OpenAraPE_att.spanning.attributes,
    OpenAraPE_att.placement.attributes,
    OpenAraPE_att.global.attributes,
    
    ## describes the function (for example status, insertion, deletion, transposition) of the metamark.
    attribute function {
      xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
    }?,
    
    ## identifies one or more elements to which the metamark applies.
    attribute target {
      list { xsd:anyURI+ }
    }?,
    empty
  }
start = OpenAraPE_TEI | OpenAraPE_teiCorpus
